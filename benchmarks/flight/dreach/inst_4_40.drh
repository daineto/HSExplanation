[0,40.05] time;
[-50.0,232.582] x1;
[-50.0,755.282] x2;
[-4.689,10.071] theta;
[0,40.05] clock;

// flying_straight_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @83(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 21.347)^2 + (x2 - 10.751)^2 < 400)) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 38.328)^2 + (x2 - 27.572)^2 < 400)) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 49.279)^2 + (x2 - 48.817)^2 < 400)) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 54.464)^2 + (x2 - 72.231)^2 < 400)) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs4
{
	 mode 5;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 58.763)^2 + (x2 - 95.843)^2 < 400)) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs5
{
	 mode 6;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - 62.617)^2 + (x2 - 119.531)^2 < 400)) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs6
{
	 mode 7;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - 65.923)^2 + (x2 - 143.301)^2 < 400)) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs7
{
	 mode 8;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - 71.246)^2 + (x2 - 166.696)^2 < 400)) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs8
{
	 mode 9;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - 77.029)^2 + (x2 - 189.989)^2 < 400)) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs9
{
	 mode 10;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - 83.009)^2 + (x2 - 213.232)^2 < 400)) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs10
{
	 mode 11;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - 89.213)^2 + (x2 - 236.416)^2 < 400)) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs11
{
	 mode 12;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - 95.66)^2 + (x2 - 259.534)^2 < 400)) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs12
{
	 mode 13;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - 102.389)^2 + (x2 - 282.571)^2 < 400)) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs13
{
	 mode 14;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - 109.444)^2 + (x2 - 305.51)^2 < 400)) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs14
{
	 mode 15;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - 116.888)^2 + (x2 - 328.326)^2 < 400)) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs15
{
	 mode 16;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - 124.817)^2 + (x2 - 350.978)^2 < 400)) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs16
{
	 mode 17;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - 132.116)^2 + (x2 - 373.815)^2 < 400)) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs17
{
	 mode 18;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - 137.998)^2 + (x2 - 397.083)^2 < 400)) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs18
{
	 mode 19;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - 143.714)^2 + (x2 - 420.393)^2 < 400)) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs19
{
	 mode 20;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @102(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - 149.25)^2 + (x2 - 443.745)^2 < 400)) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs20
{
	 mode 21;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - 154.588)^2 + (x2 - 467.144)^2 < 400)) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs21
{
	 mode 22;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - 159.709)^2 + (x2 - 490.591)^2 < 400)) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs22
{
	 mode 23;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - 164.583)^2 + (x2 - 514.091)^2 < 400)) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs23
{
	 mode 24;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - 169.174)^2 + (x2 - 537.648)^2 < 400)) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs24
{
	 mode 25;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - 173.435)^2 + (x2 - 561.266)^2 < 400)) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs25
{
	 mode 26;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - 177.303)^2 + (x2 - 584.952)^2 < 400)) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs26
{
	 mode 27;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - 180.678)^2 + (x2 - 608.713)^2 < 400)) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs27
{
	 mode 28;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - 182.491)^2 + (x2 - 632.606)^2 < 400)) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs28
{
	 mode 29;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - 177.608)^2 + (x2 - 656.004)^2 < 400)) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs29
{
	 mode 30;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - 165.733)^2 + (x2 - 676.747)^2 < 400)) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs30
{
	 mode 31;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - 148.029)^2 + (x2 - 692.805)^2 < 400)) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs31
{
	 mode 32;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - 126.23)^2 + (x2 - 702.606)^2 < 400)) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs32
{
	 mode 33;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - 102.469)^2 + (x2 - 705.192)^2 < 400)) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs33
{
	 mode 34;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - 79.072)^2 + (x2 - 700.308)^2 < 400)) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs34
{
	 mode 35;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - 58.329)^2 + (x2 - 688.433)^2 < 400)) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs35
{
	 mode 36;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - 42.271)^2 + (x2 - 670.73)^2 < 400)) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs36
{
	 mode 37;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - 32.469)^2 + (x2 - 648.931)^2 < 400)) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs37
{
	 mode 38;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - 29.884)^2 + (x2 - 625.17)^2 < 400)) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs38
{
	 mode 39;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - 34.766)^2 + (x2 - 601.772)^2 < 400)) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs39
{
	 mode 40;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - 42.209)^2 + (x2 - 578.989)^2 < 400)) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs40
{
	 mode 41;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs0
{
	 mode 42;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @83(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 21.347)^2 + (x2 - 10.751)^2 < 400)) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs1
{
	 mode 43;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 38.328)^2 + (x2 - 27.572)^2 < 400)) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs2
{
	 mode 44;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 49.279)^2 + (x2 - 48.817)^2 < 400)) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs3
{
	 mode 45;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 54.464)^2 + (x2 - 72.231)^2 < 400)) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs4
{
	 mode 46;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 58.763)^2 + (x2 - 95.843)^2 < 400)) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs5
{
	 mode 47;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - 62.617)^2 + (x2 - 119.531)^2 < 400)) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs6
{
	 mode 48;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - 65.923)^2 + (x2 - 143.301)^2 < 400)) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs7
{
	 mode 49;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - 71.246)^2 + (x2 - 166.696)^2 < 400)) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs8
{
	 mode 50;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - 77.029)^2 + (x2 - 189.989)^2 < 400)) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs9
{
	 mode 51;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - 83.009)^2 + (x2 - 213.232)^2 < 400)) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs10
{
	 mode 52;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - 89.213)^2 + (x2 - 236.416)^2 < 400)) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs11
{
	 mode 53;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - 95.66)^2 + (x2 - 259.534)^2 < 400)) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs12
{
	 mode 54;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - 102.389)^2 + (x2 - 282.571)^2 < 400)) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs13
{
	 mode 55;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - 109.444)^2 + (x2 - 305.51)^2 < 400)) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs14
{
	 mode 56;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - 116.888)^2 + (x2 - 328.326)^2 < 400)) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs15
{
	 mode 57;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - 124.817)^2 + (x2 - 350.978)^2 < 400)) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs16
{
	 mode 58;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - 132.116)^2 + (x2 - 373.815)^2 < 400)) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs17
{
	 mode 59;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - 137.998)^2 + (x2 - 397.083)^2 < 400)) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs18
{
	 mode 60;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - 143.714)^2 + (x2 - 420.393)^2 < 400)) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs19
{
	 mode 61;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @102(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - 149.25)^2 + (x2 - 443.745)^2 < 400)) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs20
{
	 mode 62;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - 154.588)^2 + (x2 - 467.144)^2 < 400)) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs21
{
	 mode 63;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - 159.709)^2 + (x2 - 490.591)^2 < 400)) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs22
{
	 mode 64;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - 164.583)^2 + (x2 - 514.091)^2 < 400)) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs23
{
	 mode 65;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - 169.174)^2 + (x2 - 537.648)^2 < 400)) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs24
{
	 mode 66;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - 173.435)^2 + (x2 - 561.266)^2 < 400)) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs25
{
	 mode 67;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - 177.303)^2 + (x2 - 584.952)^2 < 400)) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs26
{
	 mode 68;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - 180.678)^2 + (x2 - 608.713)^2 < 400)) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs27
{
	 mode 69;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - 182.491)^2 + (x2 - 632.606)^2 < 400)) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs28
{
	 mode 70;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - 177.608)^2 + (x2 - 656.004)^2 < 400)) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs29
{
	 mode 71;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - 165.733)^2 + (x2 - 676.747)^2 < 400)) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs30
{
	 mode 72;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - 148.029)^2 + (x2 - 692.805)^2 < 400)) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs31
{
	 mode 73;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - 126.23)^2 + (x2 - 702.606)^2 < 400)) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs32
{
	 mode 74;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - 102.469)^2 + (x2 - 705.192)^2 < 400)) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs33
{
	 mode 75;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - 79.072)^2 + (x2 - 700.308)^2 < 400)) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs34
{
	 mode 76;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - 58.329)^2 + (x2 - 688.433)^2 < 400)) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs35
{
	 mode 77;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - 42.271)^2 + (x2 - 670.73)^2 < 400)) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs36
{
	 mode 78;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - 32.469)^2 + (x2 - 648.931)^2 < 400)) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs37
{
	 mode 79;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - 29.884)^2 + (x2 - 625.17)^2 < 400)) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs38
{
	 mode 80;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - 34.766)^2 + (x2 - 601.772)^2 < 400)) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs39
{
	 mode 81;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - 42.209)^2 + (x2 - 578.989)^2 < 400)) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs40
{
	 mode 82;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs0
{
	 mode 83;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 21.347)^2 + (x2 - 10.751)^2 < 400)) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs1
{
	 mode 84;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 38.328)^2 + (x2 - 27.572)^2 < 400)) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs2
{
	 mode 85;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 49.279)^2 + (x2 - 48.817)^2 < 400)) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs3
{
	 mode 86;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 54.464)^2 + (x2 - 72.231)^2 < 400)) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs4
{
	 mode 87;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 58.763)^2 + (x2 - 95.843)^2 < 400)) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs5
{
	 mode 88;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - 62.617)^2 + (x2 - 119.531)^2 < 400)) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs6
{
	 mode 89;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - 65.923)^2 + (x2 - 143.301)^2 < 400)) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs7
{
	 mode 90;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - 71.246)^2 + (x2 - 166.696)^2 < 400)) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs8
{
	 mode 91;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - 77.029)^2 + (x2 - 189.989)^2 < 400)) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs9
{
	 mode 92;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - 83.009)^2 + (x2 - 213.232)^2 < 400)) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs10
{
	 mode 93;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - 89.213)^2 + (x2 - 236.416)^2 < 400)) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs11
{
	 mode 94;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - 95.66)^2 + (x2 - 259.534)^2 < 400)) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs12
{
	 mode 95;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - 102.389)^2 + (x2 - 282.571)^2 < 400)) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs13
{
	 mode 96;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - 109.444)^2 + (x2 - 305.51)^2 < 400)) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs14
{
	 mode 97;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - 116.888)^2 + (x2 - 328.326)^2 < 400)) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs15
{
	 mode 98;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - 124.817)^2 + (x2 - 350.978)^2 < 400)) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs16
{
	 mode 99;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - 132.116)^2 + (x2 - 373.815)^2 < 400)) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs17
{
	 mode 100;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - 137.998)^2 + (x2 - 397.083)^2 < 400)) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs18
{
	 mode 101;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - 143.714)^2 + (x2 - 420.393)^2 < 400)) ==> @102(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs19
{
	 mode 102;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - 149.25)^2 + (x2 - 443.745)^2 < 400)) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs20
{
	 mode 103;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - 154.588)^2 + (x2 - 467.144)^2 < 400)) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs21
{
	 mode 104;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - 159.709)^2 + (x2 - 490.591)^2 < 400)) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs22
{
	 mode 105;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - 164.583)^2 + (x2 - 514.091)^2 < 400)) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs23
{
	 mode 106;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - 169.174)^2 + (x2 - 537.648)^2 < 400)) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs24
{
	 mode 107;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - 173.435)^2 + (x2 - 561.266)^2 < 400)) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs25
{
	 mode 108;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - 177.303)^2 + (x2 - 584.952)^2 < 400)) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs26
{
	 mode 109;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - 180.678)^2 + (x2 - 608.713)^2 < 400)) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs27
{
	 mode 110;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - 182.491)^2 + (x2 - 632.606)^2 < 400)) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs28
{
	 mode 111;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - 177.608)^2 + (x2 - 656.004)^2 < 400)) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs29
{
	 mode 112;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - 165.733)^2 + (x2 - 676.747)^2 < 400)) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs30
{
	 mode 113;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - 148.029)^2 + (x2 - 692.805)^2 < 400)) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs31
{
	 mode 114;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - 126.23)^2 + (x2 - 702.606)^2 < 400)) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs32
{
	 mode 115;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - 102.469)^2 + (x2 - 705.192)^2 < 400)) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs33
{
	 mode 116;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - 79.072)^2 + (x2 - 700.308)^2 < 400)) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs34
{
	 mode 117;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - 58.329)^2 + (x2 - 688.433)^2 < 400)) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs35
{
	 mode 118;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - 42.271)^2 + (x2 - 670.73)^2 < 400)) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs36
{
	 mode 119;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - 32.469)^2 + (x2 - 648.931)^2 < 400)) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs37
{
	 mode 120;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - 29.884)^2 + (x2 - 625.17)^2 < 400)) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs38
{
	 mode 121;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - 34.766)^2 + (x2 - 601.772)^2 < 400)) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs39
{
	 mode 122;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - 42.209)^2 + (x2 - 578.989)^2 < 400)) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs40
{
	 mode 123;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 24.0 * cos(theta);
		 d/dt[x2] = 24.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
init:
@1 (and (x1 = 0.0) (x2 = 0.0) (theta = 0.3110167187965426) (clock = 0.0));

goal:
@41 true;
@82 true;
@123 true;
