[0,4.05] time;
[-50.0,76.613] x1;
[-50.0,129.463] x2;
[-4.33,6.93] theta;
[0,4.05] clock;

// flying_straight_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs4
{
	 mode 5;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs0
{
	 mode 6;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs1
{
	 mode 7;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs2
{
	 mode 8;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs3
{
	 mode 9;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs4
{
	 mode 10;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs0
{
	 mode 11;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs1
{
	 mode 12;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs2
{
	 mode 13;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs3
{
	 mode 14;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs4
{
	 mode 15;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
init:
@1 (and (x1 = 0.0) (x2 = 0.0) (theta = 0.6702646032358428) (clock = 0.0));

goal:
@5 true;
@10 true;
@15 true;
