[0,100.05] time;
[-389.127,130.752] x1;
[-308.028,174.975] x2;
[-16.205,9.154] theta;
[0,100.05] clock;

// flying_straight_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @102(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @203(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @204(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @205(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @206(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs4
{
	 mode 5;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @207(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 11.532)^2 + (x2 - 98.361)^2 < 400)) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs5
{
	 mode 6;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @208(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - -4.574)^2 + (x2 - 113.216)^2 < 400)) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs6
{
	 mode 7;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @209(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - -24.481)^2 + (x2 - 122.366)^2 < 400)) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs7
{
	 mode 8;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @210(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - -46.241)^2 + (x2 - 124.918)^2 < 400)) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs8
{
	 mode 9;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @211(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - -68.021)^2 + (x2 - 121.913)^2 < 400)) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs9
{
	 mode 10;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @212(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - -89.741)^2 + (x2 - 118.413)^2 < 400)) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs10
{
	 mode 11;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @213(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - -110.864)^2 + (x2 - 112.554)^2 < 400)) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs11
{
	 mode 12;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @214(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - -129.182)^2 + (x2 - 100.534)^2 < 400)) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs12
{
	 mode 13;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @215(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - -142.946)^2 + (x2 - 83.477)^2 < 400)) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs13
{
	 mode 14;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @216(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - -154.685)^2 + (x2 - 64.87)^2 < 400)) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs14
{
	 mode 15;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @217(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - -166.423)^2 + (x2 - 46.263)^2 < 400)) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs15
{
	 mode 16;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @218(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - -178.141)^2 + (x2 - 27.643)^2 < 400)) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs16
{
	 mode 17;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @219(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - -189.85)^2 + (x2 - 9.018)^2 < 400)) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs17
{
	 mode 18;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @220(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - -201.559)^2 + (x2 - -9.607)^2 < 400)) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs18
{
	 mode 19;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @221(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - -213.517)^2 + (x2 - -28.064)^2 < 400)) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs19
{
	 mode 20;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @222(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - -229.401)^2 + (x2 - -43.155)^2 < 400)) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs20
{
	 mode 21;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @223(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - -249.171)^2 + (x2 - -52.599)^2 < 400)) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs21
{
	 mode 22;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @224(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - -270.891)^2 + (x2 - -55.472)^2 < 400)) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs22
{
	 mode 23;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @124(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @225(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - -292.436)^2 + (x2 - -51.491)^2 < 400)) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs23
{
	 mode 24;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @125(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @226(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - -311.697)^2 + (x2 - -41.048)^2 < 400)) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs24
{
	 mode 25;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @126(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @227(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - -326.788)^2 + (x2 - -25.164)^2 < 400)) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs25
{
	 mode 26;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @127(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @228(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - -336.232)^2 + (x2 - -5.394)^2 < 400)) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs26
{
	 mode 27;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @128(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @229(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - -339.104)^2 + (x2 - 16.326)^2 < 400)) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs27
{
	 mode 28;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @129(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @230(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - -335.124)^2 + (x2 - 37.871)^2 < 400)) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs28
{
	 mode 29;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @130(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @231(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - -326.161)^2 + (x2 - 57.954)^2 < 400)) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs29
{
	 mode 30;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @131(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @232(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - -316.54)^2 + (x2 - 77.738)^2 < 400)) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs30
{
	 mode 31;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @132(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @233(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - -304.142)^2 + (x2 - 95.806)^2 < 400)) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs31
{
	 mode 32;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @133(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @234(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - -286.782)^2 + (x2 - 109.172)^2 < 400)) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs32
{
	 mode 33;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @134(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @235(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - -266.141)^2 + (x2 - 116.519)^2 < 400)) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs33
{
	 mode 34;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @135(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @236(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - -244.239)^2 + (x2 - 117.129)^2 < 400)) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs34
{
	 mode 35;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @136(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @237(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - -223.197)^2 + (x2 - 110.998)^2 < 400)) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs35
{
	 mode 36;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @137(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @238(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - -203.004)^2 + (x2 - 102.265)^2 < 400)) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs36
{
	 mode 37;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @138(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @239(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - -182.921)^2 + (x2 - 93.284)^2 < 400)) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs37
{
	 mode 38;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @139(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @240(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - -162.971)^2 + (x2 - 84.011)^2 < 400)) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs38
{
	 mode 39;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @140(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @241(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - -143.187)^2 + (x2 - 74.389)^2 < 400)) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs39
{
	 mode 40;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @141(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @242(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - -123.621)^2 + (x2 - 64.333)^2 < 400)) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs40
{
	 mode 41;
	 invt:
		 (clock < 41.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @142(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @243(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 41.0 - 0.05) (clock < 41.0 + 0.05) ((x1 - -106.189)^2 + (x2 - 51.06)^2 < 400)) ==> @42(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs41
{
	 mode 42;
	 invt:
		 (clock < 42.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @143(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @244(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 42.0 - 0.05) (clock < 42.0 + 0.05) ((x1 - -93.712)^2 + (x2 - 33.05)^2 < 400)) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs42
{
	 mode 43;
	 invt:
		 (clock < 43.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @144(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @245(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 43.0 - 0.05) (clock < 43.0 + 0.05) ((x1 - -87.411)^2 + (x2 - 12.066)^2 < 400)) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs43
{
	 mode 44;
	 invt:
		 (clock < 44.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @145(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @246(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 44.0 - 0.05) (clock < 44.0 + 0.05) ((x1 - -87.903)^2 + (x2 - -9.839)^2 < 400)) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs44
{
	 mode 45;
	 invt:
		 (clock < 45.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @146(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @247(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 45.0 - 0.05) (clock < 45.0 + 0.05) ((x1 - -94.625)^2 + (x2 - -30.742)^2 < 400)) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs45
{
	 mode 46;
	 invt:
		 (clock < 46.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @147(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @248(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 46.0 - 0.05) (clock < 46.0 + 0.05) ((x1 - -102.713)^2 + (x2 - -51.201)^2 < 400)) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs46
{
	 mode 47;
	 invt:
		 (clock < 47.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @148(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @249(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 47.0 - 0.05) (clock < 47.0 + 0.05) ((x1 - -111.122)^2 + (x2 - -71.531)^2 < 400)) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs47
{
	 mode 48;
	 invt:
		 (clock < 48.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @149(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @250(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 48.0 - 0.05) (clock < 48.0 + 0.05) ((x1 - -119.916)^2 + (x2 - -91.696)^2 < 400)) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs48
{
	 mode 49;
	 invt:
		 (clock < 49.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @150(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @251(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 49.0 - 0.05) (clock < 49.0 + 0.05) ((x1 - -129.71)^2 + (x2 - -111.37)^2 < 400)) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs49
{
	 mode 50;
	 invt:
		 (clock < 50.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @151(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @252(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 50.0 - 0.05) (clock < 50.0 + 0.05) ((x1 - -144.31)^2 + (x2 - -127.707)^2 < 400)) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs50
{
	 mode 51;
	 invt:
		 (clock < 51.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @152(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @253(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 51.0 - 0.05) (clock < 51.0 + 0.05) ((x1 - -163.243)^2 + (x2 - -138.732)^2 < 400)) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs51
{
	 mode 52;
	 invt:
		 (clock < 52.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @153(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @254(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 52.0 - 0.05) (clock < 52.0 + 0.05) ((x1 - -184.657)^2 + (x2 - -143.367)^2 < 400)) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs52
{
	 mode 53;
	 invt:
		 (clock < 53.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @154(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @255(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 53.0 - 0.05) (clock < 53.0 + 0.05) ((x1 - -206.455)^2 + (x2 - -141.158)^2 < 400)) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs53
{
	 mode 54;
	 invt:
		 (clock < 54.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @155(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @256(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 54.0 - 0.05) (clock < 54.0 + 0.05) ((x1 - -226.504)^2 + (x2 - -132.321)^2 < 400)) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs54
{
	 mode 55;
	 invt:
		 (clock < 55.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @156(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @257(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 55.0 - 0.05) (clock < 55.0 + 0.05) ((x1 - -242.84)^2 + (x2 - -117.722)^2 < 400)) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs55
{
	 mode 56;
	 invt:
		 (clock < 56.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @157(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @258(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 56.0 - 0.05) (clock < 56.0 + 0.05) ((x1 - -253.865)^2 + (x2 - -98.788)^2 < 400)) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs56
{
	 mode 57;
	 invt:
		 (clock < 57.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @158(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @259(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 57.0 - 0.05) (clock < 57.0 + 0.05) ((x1 - -258.501)^2 + (x2 - -77.374)^2 < 400)) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs57
{
	 mode 58;
	 invt:
		 (clock < 58.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @159(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @260(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 58.0 - 0.05) (clock < 58.0 + 0.05) ((x1 - -256.576)^2 + (x2 - -55.52)^2 < 400)) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs58
{
	 mode 59;
	 invt:
		 (clock < 59.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @160(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @261(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 59.0 - 0.05) (clock < 59.0 + 0.05) ((x1 - -252.92)^2 + (x2 - -33.826)^2 < 400)) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs59
{
	 mode 60;
	 invt:
		 (clock < 60.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @161(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @262(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 60.0 - 0.05) (clock < 60.0 + 0.05) ((x1 - -246.624)^2 + (x2 - -12.834)^2 < 400)) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs60
{
	 mode 61;
	 invt:
		 (clock < 61.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @162(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @263(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 61.0 - 0.05) (clock < 61.0 + 0.05) ((x1 - -234.187)^2 + (x2 - 5.204)^2 < 400)) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs61
{
	 mode 62;
	 invt:
		 (clock < 62.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @163(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @264(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 62.0 - 0.05) (clock < 62.0 + 0.05) ((x1 - -216.785)^2 + (x2 - 18.515)^2 < 400)) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs62
{
	 mode 63;
	 invt:
		 (clock < 63.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @164(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @265(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 63.0 - 0.05) (clock < 63.0 + 0.05) ((x1 - -196.121)^2 + (x2 - 25.797)^2 < 400)) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs63
{
	 mode 64;
	 invt:
		 (clock < 64.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @165(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @266(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 64.0 - 0.05) (clock < 64.0 + 0.05) ((x1 - -174.218)^2 + (x2 - 26.338)^2 < 400)) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs64
{
	 mode 65;
	 invt:
		 (clock < 65.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @166(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @267(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 65.0 - 0.05) (clock < 65.0 + 0.05) ((x1 - -153.209)^2 + (x2 - 20.108)^2 < 400)) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs65
{
	 mode 66;
	 invt:
		 (clock < 66.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @167(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @268(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 66.0 - 0.05) (clock < 66.0 + 0.05) ((x1 - -133.105)^2 + (x2 - 11.172)^2 < 400)) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs66
{
	 mode 67;
	 invt:
		 (clock < 67.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @168(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @269(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 67.0 - 0.05) (clock < 67.0 + 0.05) ((x1 - -113.377)^2 + (x2 - 1.496)^2 < 400)) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs67
{
	 mode 68;
	 invt:
		 (clock < 68.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @169(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @270(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 68.0 - 0.05) (clock < 68.0 + 0.05) ((x1 - -96.018)^2 + (x2 - -12.001)^2 < 400)) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs68
{
	 mode 69;
	 invt:
		 (clock < 69.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @170(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @271(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 69.0 - 0.05) (clock < 69.0 + 0.05) ((x1 - -78.898)^2 + (x2 - -25.819)^2 < 400)) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs69
{
	 mode 70;
	 invt:
		 (clock < 70.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @171(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @272(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 70.0 - 0.05) (clock < 70.0 + 0.05) ((x1 - -61.779)^2 + (x2 - -39.636)^2 < 400)) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs70
{
	 mode 71;
	 invt:
		 (clock < 71.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @172(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @273(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 71.0 - 0.05) (clock < 71.0 + 0.05) ((x1 - -44.659)^2 + (x2 - -53.453)^2 < 400)) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs71
{
	 mode 72;
	 invt:
		 (clock < 72.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @173(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @274(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 72.0 - 0.05) (clock < 72.0 + 0.05) ((x1 - -27.539)^2 + (x2 - -67.27)^2 < 400)) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs72
{
	 mode 73;
	 invt:
		 (clock < 73.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @174(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @275(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 73.0 - 0.05) (clock < 73.0 + 0.05) ((x1 - -10.419)^2 + (x2 - -81.087)^2 < 400)) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs73
{
	 mode 74;
	 invt:
		 (clock < 74.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @175(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @276(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 74.0 - 0.05) (clock < 74.0 + 0.05) ((x1 - 6.709)^2 + (x2 - -94.894)^2 < 400)) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs74
{
	 mode 75;
	 invt:
		 (clock < 75.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @176(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @277(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 75.0 - 0.05) (clock < 75.0 + 0.05) ((x1 - 23.85)^2 + (x2 - -108.684)^2 < 400)) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs75
{
	 mode 76;
	 invt:
		 (clock < 76.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @177(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @278(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 76.0 - 0.05) (clock < 76.0 + 0.05) ((x1 - 40.992)^2 + (x2 - -122.474)^2 < 400)) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs76
{
	 mode 77;
	 invt:
		 (clock < 77.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @178(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @279(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 77.0 - 0.05) (clock < 77.0 + 0.05) ((x1 - 58.04)^2 + (x2 - -136.375)^2 < 400)) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs77
{
	 mode 78;
	 invt:
		 (clock < 78.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @179(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @280(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 78.0 - 0.05) (clock < 78.0 + 0.05) ((x1 - 71.677)^2 + (x2 - -153.524)^2 < 400)) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs78
{
	 mode 79;
	 invt:
		 (clock < 79.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @180(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @281(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 79.0 - 0.05) (clock < 79.0 + 0.05) ((x1 - 79.347)^2 + (x2 - -174.047)^2 < 400)) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs79
{
	 mode 80;
	 invt:
		 (clock < 80.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @181(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @282(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 80.0 - 0.05) (clock < 80.0 + 0.05) ((x1 - 80.3)^2 + (x2 - -195.936)^2 < 400)) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs80
{
	 mode 81;
	 invt:
		 (clock < 81.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @182(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @283(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 81.0 - 0.05) (clock < 81.0 + 0.05) ((x1 - 74.443)^2 + (x2 - -217.048)^2 < 400)) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs81
{
	 mode 82;
	 invt:
		 (clock < 82.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @183(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @284(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 82.0 - 0.05) (clock < 82.0 + 0.05) ((x1 - 62.348)^2 + (x2 - -235.316)^2 < 400)) ==> @83(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs82
{
	 mode 83;
	 invt:
		 (clock < 83.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @184(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @285(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 83.0 - 0.05) (clock < 83.0 + 0.05) ((x1 - 45.2)^2 + (x2 - -248.954)^2 < 400)) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs83
{
	 mode 84;
	 invt:
		 (clock < 84.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @185(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @286(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 84.0 - 0.05) (clock < 84.0 + 0.05) ((x1 - 24.677)^2 + (x2 - -256.624)^2 < 400)) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs84
{
	 mode 85;
	 invt:
		 (clock < 85.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @186(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @287(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 85.0 - 0.05) (clock < 85.0 + 0.05) ((x1 - 2.788)^2 + (x2 - -257.577)^2 < 400)) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs85
{
	 mode 86;
	 invt:
		 (clock < 86.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @187(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @288(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 86.0 - 0.05) (clock < 86.0 + 0.05) ((x1 - -18.324)^2 + (x2 - -251.72)^2 < 400)) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs86
{
	 mode 87;
	 invt:
		 (clock < 87.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @188(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @289(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 87.0 - 0.05) (clock < 87.0 + 0.05) ((x1 - -36.593)^2 + (x2 - -239.625)^2 < 400)) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs87
{
	 mode 88;
	 invt:
		 (clock < 88.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @189(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @290(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 88.0 - 0.05) (clock < 88.0 + 0.05) ((x1 - -50.23)^2 + (x2 - -222.477)^2 < 400)) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs88
{
	 mode 89;
	 invt:
		 (clock < 89.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @190(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @291(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 89.0 - 0.05) (clock < 89.0 + 0.05) ((x1 - -57.901)^2 + (x2 - -201.953)^2 < 400)) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs89
{
	 mode 90;
	 invt:
		 (clock < 90.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @191(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @292(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 90.0 - 0.05) (clock < 90.0 + 0.05) ((x1 - -59.406)^2 + (x2 - -180.048)^2 < 400)) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs90
{
	 mode 91;
	 invt:
		 (clock < 91.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @192(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @293(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 91.0 - 0.05) (clock < 91.0 + 0.05) ((x1 - -59.672)^2 + (x2 - -158.05)^2 < 400)) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs91
{
	 mode 92;
	 invt:
		 (clock < 92.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @193(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @294(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 92.0 - 0.05) (clock < 92.0 + 0.05) ((x1 - -59.939)^2 + (x2 - -136.051)^2 < 400)) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs92
{
	 mode 93;
	 invt:
		 (clock < 93.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @194(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @295(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 93.0 - 0.05) (clock < 93.0 + 0.05) ((x1 - -60.006)^2 + (x2 - -114.056)^2 < 400)) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs93
{
	 mode 94;
	 invt:
		 (clock < 94.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @195(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @296(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 94.0 - 0.05) (clock < 94.0 + 0.05) ((x1 - -56.194)^2 + (x2 - -92.412)^2 < 400)) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs94
{
	 mode 95;
	 invt:
		 (clock < 95.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @196(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @297(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 95.0 - 0.05) (clock < 95.0 + 0.05) ((x1 - -51.689)^2 + (x2 - -70.878)^2 < 400)) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs95
{
	 mode 96;
	 invt:
		 (clock < 96.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @197(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @298(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 96.0 - 0.05) (clock < 96.0 + 0.05) ((x1 - -47.183)^2 + (x2 - -49.344)^2 < 400)) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs96
{
	 mode 97;
	 invt:
		 (clock < 97.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @198(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @299(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 97.0 - 0.05) (clock < 97.0 + 0.05) ((x1 - -42.678)^2 + (x2 - -27.811)^2 < 400)) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs97
{
	 mode 98;
	 invt:
		 (clock < 98.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @199(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @300(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 98.0 - 0.05) (clock < 98.0 + 0.05) ((x1 - -38.173)^2 + (x2 - -6.277)^2 < 400)) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs98
{
	 mode 99;
	 invt:
		 (clock < 99.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @200(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @301(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 99.0 - 0.05) (clock < 99.0 + 0.05) ((x1 - -33.668)^2 + (x2 - 15.257)^2 < 400)) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs99
{
	 mode 100;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @201(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @302(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 100.0 - 0.05) (clock < 100.0 + 0.05) ((x1 - -29.163)^2 + (x2 - 36.791)^2 < 400)) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// flying_straight_obs100
{
	 mode 101;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @202(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @303(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs0
{
	 mode 102;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @203(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs1
{
	 mode 103;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @204(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs2
{
	 mode 104;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @205(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs3
{
	 mode 105;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @206(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs4
{
	 mode 106;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @207(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 11.532)^2 + (x2 - 98.361)^2 < 400)) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs5
{
	 mode 107;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @208(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - -4.574)^2 + (x2 - 113.216)^2 < 400)) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs6
{
	 mode 108;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @209(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - -24.481)^2 + (x2 - 122.366)^2 < 400)) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs7
{
	 mode 109;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @210(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - -46.241)^2 + (x2 - 124.918)^2 < 400)) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs8
{
	 mode 110;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @211(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - -68.021)^2 + (x2 - 121.913)^2 < 400)) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs9
{
	 mode 111;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @212(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - -89.741)^2 + (x2 - 118.413)^2 < 400)) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs10
{
	 mode 112;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @213(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - -110.864)^2 + (x2 - 112.554)^2 < 400)) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs11
{
	 mode 113;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @214(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - -129.182)^2 + (x2 - 100.534)^2 < 400)) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs12
{
	 mode 114;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @215(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - -142.946)^2 + (x2 - 83.477)^2 < 400)) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs13
{
	 mode 115;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @216(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - -154.685)^2 + (x2 - 64.87)^2 < 400)) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs14
{
	 mode 116;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @217(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - -166.423)^2 + (x2 - 46.263)^2 < 400)) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs15
{
	 mode 117;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @218(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - -178.141)^2 + (x2 - 27.643)^2 < 400)) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs16
{
	 mode 118;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @219(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - -189.85)^2 + (x2 - 9.018)^2 < 400)) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs17
{
	 mode 119;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @220(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - -201.559)^2 + (x2 - -9.607)^2 < 400)) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs18
{
	 mode 120;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @221(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - -213.517)^2 + (x2 - -28.064)^2 < 400)) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs19
{
	 mode 121;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @222(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - -229.401)^2 + (x2 - -43.155)^2 < 400)) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs20
{
	 mode 122;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @223(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - -249.171)^2 + (x2 - -52.599)^2 < 400)) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs21
{
	 mode 123;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @224(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - -270.891)^2 + (x2 - -55.472)^2 < 400)) ==> @124(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs22
{
	 mode 124;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @225(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - -292.436)^2 + (x2 - -51.491)^2 < 400)) ==> @125(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs23
{
	 mode 125;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @226(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - -311.697)^2 + (x2 - -41.048)^2 < 400)) ==> @126(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs24
{
	 mode 126;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @227(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - -326.788)^2 + (x2 - -25.164)^2 < 400)) ==> @127(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs25
{
	 mode 127;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @228(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - -336.232)^2 + (x2 - -5.394)^2 < 400)) ==> @128(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs26
{
	 mode 128;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @229(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - -339.104)^2 + (x2 - 16.326)^2 < 400)) ==> @129(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs27
{
	 mode 129;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @230(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - -335.124)^2 + (x2 - 37.871)^2 < 400)) ==> @130(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs28
{
	 mode 130;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @231(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - -326.161)^2 + (x2 - 57.954)^2 < 400)) ==> @131(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs29
{
	 mode 131;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @232(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - -316.54)^2 + (x2 - 77.738)^2 < 400)) ==> @132(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs30
{
	 mode 132;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @233(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - -304.142)^2 + (x2 - 95.806)^2 < 400)) ==> @133(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs31
{
	 mode 133;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @234(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - -286.782)^2 + (x2 - 109.172)^2 < 400)) ==> @134(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs32
{
	 mode 134;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @235(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - -266.141)^2 + (x2 - 116.519)^2 < 400)) ==> @135(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs33
{
	 mode 135;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @236(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - -244.239)^2 + (x2 - 117.129)^2 < 400)) ==> @136(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs34
{
	 mode 136;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @237(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - -223.197)^2 + (x2 - 110.998)^2 < 400)) ==> @137(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs35
{
	 mode 137;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @238(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - -203.004)^2 + (x2 - 102.265)^2 < 400)) ==> @138(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs36
{
	 mode 138;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @239(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - -182.921)^2 + (x2 - 93.284)^2 < 400)) ==> @139(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs37
{
	 mode 139;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @240(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - -162.971)^2 + (x2 - 84.011)^2 < 400)) ==> @140(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs38
{
	 mode 140;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @241(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - -143.187)^2 + (x2 - 74.389)^2 < 400)) ==> @141(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs39
{
	 mode 141;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @242(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - -123.621)^2 + (x2 - 64.333)^2 < 400)) ==> @142(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs40
{
	 mode 142;
	 invt:
		 (clock < 41.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @243(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 41.0 - 0.05) (clock < 41.0 + 0.05) ((x1 - -106.189)^2 + (x2 - 51.06)^2 < 400)) ==> @143(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs41
{
	 mode 143;
	 invt:
		 (clock < 42.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @244(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 42.0 - 0.05) (clock < 42.0 + 0.05) ((x1 - -93.712)^2 + (x2 - 33.05)^2 < 400)) ==> @144(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs42
{
	 mode 144;
	 invt:
		 (clock < 43.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @245(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 43.0 - 0.05) (clock < 43.0 + 0.05) ((x1 - -87.411)^2 + (x2 - 12.066)^2 < 400)) ==> @145(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs43
{
	 mode 145;
	 invt:
		 (clock < 44.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @246(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 44.0 - 0.05) (clock < 44.0 + 0.05) ((x1 - -87.903)^2 + (x2 - -9.839)^2 < 400)) ==> @146(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs44
{
	 mode 146;
	 invt:
		 (clock < 45.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @247(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 45.0 - 0.05) (clock < 45.0 + 0.05) ((x1 - -94.625)^2 + (x2 - -30.742)^2 < 400)) ==> @147(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs45
{
	 mode 147;
	 invt:
		 (clock < 46.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @248(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 46.0 - 0.05) (clock < 46.0 + 0.05) ((x1 - -102.713)^2 + (x2 - -51.201)^2 < 400)) ==> @148(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs46
{
	 mode 148;
	 invt:
		 (clock < 47.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @249(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 47.0 - 0.05) (clock < 47.0 + 0.05) ((x1 - -111.122)^2 + (x2 - -71.531)^2 < 400)) ==> @149(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs47
{
	 mode 149;
	 invt:
		 (clock < 48.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @250(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 48.0 - 0.05) (clock < 48.0 + 0.05) ((x1 - -119.916)^2 + (x2 - -91.696)^2 < 400)) ==> @150(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs48
{
	 mode 150;
	 invt:
		 (clock < 49.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @251(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 49.0 - 0.05) (clock < 49.0 + 0.05) ((x1 - -129.71)^2 + (x2 - -111.37)^2 < 400)) ==> @151(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs49
{
	 mode 151;
	 invt:
		 (clock < 50.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @252(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 50.0 - 0.05) (clock < 50.0 + 0.05) ((x1 - -144.31)^2 + (x2 - -127.707)^2 < 400)) ==> @152(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs50
{
	 mode 152;
	 invt:
		 (clock < 51.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @253(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 51.0 - 0.05) (clock < 51.0 + 0.05) ((x1 - -163.243)^2 + (x2 - -138.732)^2 < 400)) ==> @153(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs51
{
	 mode 153;
	 invt:
		 (clock < 52.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @254(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 52.0 - 0.05) (clock < 52.0 + 0.05) ((x1 - -184.657)^2 + (x2 - -143.367)^2 < 400)) ==> @154(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs52
{
	 mode 154;
	 invt:
		 (clock < 53.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @255(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 53.0 - 0.05) (clock < 53.0 + 0.05) ((x1 - -206.455)^2 + (x2 - -141.158)^2 < 400)) ==> @155(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs53
{
	 mode 155;
	 invt:
		 (clock < 54.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @256(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 54.0 - 0.05) (clock < 54.0 + 0.05) ((x1 - -226.504)^2 + (x2 - -132.321)^2 < 400)) ==> @156(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs54
{
	 mode 156;
	 invt:
		 (clock < 55.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @257(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 55.0 - 0.05) (clock < 55.0 + 0.05) ((x1 - -242.84)^2 + (x2 - -117.722)^2 < 400)) ==> @157(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs55
{
	 mode 157;
	 invt:
		 (clock < 56.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @258(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 56.0 - 0.05) (clock < 56.0 + 0.05) ((x1 - -253.865)^2 + (x2 - -98.788)^2 < 400)) ==> @158(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs56
{
	 mode 158;
	 invt:
		 (clock < 57.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @259(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 57.0 - 0.05) (clock < 57.0 + 0.05) ((x1 - -258.501)^2 + (x2 - -77.374)^2 < 400)) ==> @159(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs57
{
	 mode 159;
	 invt:
		 (clock < 58.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @260(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 58.0 - 0.05) (clock < 58.0 + 0.05) ((x1 - -256.576)^2 + (x2 - -55.52)^2 < 400)) ==> @160(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs58
{
	 mode 160;
	 invt:
		 (clock < 59.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @261(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 59.0 - 0.05) (clock < 59.0 + 0.05) ((x1 - -252.92)^2 + (x2 - -33.826)^2 < 400)) ==> @161(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs59
{
	 mode 161;
	 invt:
		 (clock < 60.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @262(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 60.0 - 0.05) (clock < 60.0 + 0.05) ((x1 - -246.624)^2 + (x2 - -12.834)^2 < 400)) ==> @162(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs60
{
	 mode 162;
	 invt:
		 (clock < 61.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @263(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 61.0 - 0.05) (clock < 61.0 + 0.05) ((x1 - -234.187)^2 + (x2 - 5.204)^2 < 400)) ==> @163(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs61
{
	 mode 163;
	 invt:
		 (clock < 62.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @264(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 62.0 - 0.05) (clock < 62.0 + 0.05) ((x1 - -216.785)^2 + (x2 - 18.515)^2 < 400)) ==> @164(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs62
{
	 mode 164;
	 invt:
		 (clock < 63.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @265(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 63.0 - 0.05) (clock < 63.0 + 0.05) ((x1 - -196.121)^2 + (x2 - 25.797)^2 < 400)) ==> @165(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs63
{
	 mode 165;
	 invt:
		 (clock < 64.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @266(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 64.0 - 0.05) (clock < 64.0 + 0.05) ((x1 - -174.218)^2 + (x2 - 26.338)^2 < 400)) ==> @166(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs64
{
	 mode 166;
	 invt:
		 (clock < 65.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @267(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 65.0 - 0.05) (clock < 65.0 + 0.05) ((x1 - -153.209)^2 + (x2 - 20.108)^2 < 400)) ==> @167(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs65
{
	 mode 167;
	 invt:
		 (clock < 66.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @268(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 66.0 - 0.05) (clock < 66.0 + 0.05) ((x1 - -133.105)^2 + (x2 - 11.172)^2 < 400)) ==> @168(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs66
{
	 mode 168;
	 invt:
		 (clock < 67.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @269(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 67.0 - 0.05) (clock < 67.0 + 0.05) ((x1 - -113.377)^2 + (x2 - 1.496)^2 < 400)) ==> @169(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs67
{
	 mode 169;
	 invt:
		 (clock < 68.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @270(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 68.0 - 0.05) (clock < 68.0 + 0.05) ((x1 - -96.018)^2 + (x2 - -12.001)^2 < 400)) ==> @170(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs68
{
	 mode 170;
	 invt:
		 (clock < 69.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @271(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 69.0 - 0.05) (clock < 69.0 + 0.05) ((x1 - -78.898)^2 + (x2 - -25.819)^2 < 400)) ==> @171(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs69
{
	 mode 171;
	 invt:
		 (clock < 70.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @272(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 70.0 - 0.05) (clock < 70.0 + 0.05) ((x1 - -61.779)^2 + (x2 - -39.636)^2 < 400)) ==> @172(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs70
{
	 mode 172;
	 invt:
		 (clock < 71.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @273(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 71.0 - 0.05) (clock < 71.0 + 0.05) ((x1 - -44.659)^2 + (x2 - -53.453)^2 < 400)) ==> @173(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs71
{
	 mode 173;
	 invt:
		 (clock < 72.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @274(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 72.0 - 0.05) (clock < 72.0 + 0.05) ((x1 - -27.539)^2 + (x2 - -67.27)^2 < 400)) ==> @174(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs72
{
	 mode 174;
	 invt:
		 (clock < 73.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @275(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 73.0 - 0.05) (clock < 73.0 + 0.05) ((x1 - -10.419)^2 + (x2 - -81.087)^2 < 400)) ==> @175(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs73
{
	 mode 175;
	 invt:
		 (clock < 74.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @276(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 74.0 - 0.05) (clock < 74.0 + 0.05) ((x1 - 6.709)^2 + (x2 - -94.894)^2 < 400)) ==> @176(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs74
{
	 mode 176;
	 invt:
		 (clock < 75.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @277(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 75.0 - 0.05) (clock < 75.0 + 0.05) ((x1 - 23.85)^2 + (x2 - -108.684)^2 < 400)) ==> @177(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs75
{
	 mode 177;
	 invt:
		 (clock < 76.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @278(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 76.0 - 0.05) (clock < 76.0 + 0.05) ((x1 - 40.992)^2 + (x2 - -122.474)^2 < 400)) ==> @178(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs76
{
	 mode 178;
	 invt:
		 (clock < 77.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @279(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 77.0 - 0.05) (clock < 77.0 + 0.05) ((x1 - 58.04)^2 + (x2 - -136.375)^2 < 400)) ==> @179(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs77
{
	 mode 179;
	 invt:
		 (clock < 78.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @280(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 78.0 - 0.05) (clock < 78.0 + 0.05) ((x1 - 71.677)^2 + (x2 - -153.524)^2 < 400)) ==> @180(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs78
{
	 mode 180;
	 invt:
		 (clock < 79.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @281(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 79.0 - 0.05) (clock < 79.0 + 0.05) ((x1 - 79.347)^2 + (x2 - -174.047)^2 < 400)) ==> @181(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs79
{
	 mode 181;
	 invt:
		 (clock < 80.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @282(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 80.0 - 0.05) (clock < 80.0 + 0.05) ((x1 - 80.3)^2 + (x2 - -195.936)^2 < 400)) ==> @182(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs80
{
	 mode 182;
	 invt:
		 (clock < 81.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @283(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 81.0 - 0.05) (clock < 81.0 + 0.05) ((x1 - 74.443)^2 + (x2 - -217.048)^2 < 400)) ==> @183(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs81
{
	 mode 183;
	 invt:
		 (clock < 82.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @284(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 82.0 - 0.05) (clock < 82.0 + 0.05) ((x1 - 62.348)^2 + (x2 - -235.316)^2 < 400)) ==> @184(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs82
{
	 mode 184;
	 invt:
		 (clock < 83.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @83(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @285(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 83.0 - 0.05) (clock < 83.0 + 0.05) ((x1 - 45.2)^2 + (x2 - -248.954)^2 < 400)) ==> @185(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs83
{
	 mode 185;
	 invt:
		 (clock < 84.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @286(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 84.0 - 0.05) (clock < 84.0 + 0.05) ((x1 - 24.677)^2 + (x2 - -256.624)^2 < 400)) ==> @186(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs84
{
	 mode 186;
	 invt:
		 (clock < 85.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @287(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 85.0 - 0.05) (clock < 85.0 + 0.05) ((x1 - 2.788)^2 + (x2 - -257.577)^2 < 400)) ==> @187(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs85
{
	 mode 187;
	 invt:
		 (clock < 86.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @288(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 86.0 - 0.05) (clock < 86.0 + 0.05) ((x1 - -18.324)^2 + (x2 - -251.72)^2 < 400)) ==> @188(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs86
{
	 mode 188;
	 invt:
		 (clock < 87.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @289(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 87.0 - 0.05) (clock < 87.0 + 0.05) ((x1 - -36.593)^2 + (x2 - -239.625)^2 < 400)) ==> @189(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs87
{
	 mode 189;
	 invt:
		 (clock < 88.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @290(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 88.0 - 0.05) (clock < 88.0 + 0.05) ((x1 - -50.23)^2 + (x2 - -222.477)^2 < 400)) ==> @190(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs88
{
	 mode 190;
	 invt:
		 (clock < 89.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @291(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 89.0 - 0.05) (clock < 89.0 + 0.05) ((x1 - -57.901)^2 + (x2 - -201.953)^2 < 400)) ==> @191(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs89
{
	 mode 191;
	 invt:
		 (clock < 90.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @292(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 90.0 - 0.05) (clock < 90.0 + 0.05) ((x1 - -59.406)^2 + (x2 - -180.048)^2 < 400)) ==> @192(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs90
{
	 mode 192;
	 invt:
		 (clock < 91.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @293(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 91.0 - 0.05) (clock < 91.0 + 0.05) ((x1 - -59.672)^2 + (x2 - -158.05)^2 < 400)) ==> @193(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs91
{
	 mode 193;
	 invt:
		 (clock < 92.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @294(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 92.0 - 0.05) (clock < 92.0 + 0.05) ((x1 - -59.939)^2 + (x2 - -136.051)^2 < 400)) ==> @194(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs92
{
	 mode 194;
	 invt:
		 (clock < 93.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @295(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 93.0 - 0.05) (clock < 93.0 + 0.05) ((x1 - -60.006)^2 + (x2 - -114.056)^2 < 400)) ==> @195(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs93
{
	 mode 195;
	 invt:
		 (clock < 94.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @296(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 94.0 - 0.05) (clock < 94.0 + 0.05) ((x1 - -56.194)^2 + (x2 - -92.412)^2 < 400)) ==> @196(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs94
{
	 mode 196;
	 invt:
		 (clock < 95.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @297(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 95.0 - 0.05) (clock < 95.0 + 0.05) ((x1 - -51.689)^2 + (x2 - -70.878)^2 < 400)) ==> @197(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs95
{
	 mode 197;
	 invt:
		 (clock < 96.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @298(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 96.0 - 0.05) (clock < 96.0 + 0.05) ((x1 - -47.183)^2 + (x2 - -49.344)^2 < 400)) ==> @198(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs96
{
	 mode 198;
	 invt:
		 (clock < 97.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @299(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 97.0 - 0.05) (clock < 97.0 + 0.05) ((x1 - -42.678)^2 + (x2 - -27.811)^2 < 400)) ==> @199(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs97
{
	 mode 199;
	 invt:
		 (clock < 98.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @300(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 98.0 - 0.05) (clock < 98.0 + 0.05) ((x1 - -38.173)^2 + (x2 - -6.277)^2 < 400)) ==> @200(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs98
{
	 mode 200;
	 invt:
		 (clock < 99.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @301(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 99.0 - 0.05) (clock < 99.0 + 0.05) ((x1 - -33.668)^2 + (x2 - 15.257)^2 < 400)) ==> @201(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs99
{
	 mode 201;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @302(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 100.0 - 0.05) (clock < 100.0 + 0.05) ((x1 - -29.163)^2 + (x2 - 36.791)^2 < 400)) ==> @202(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_left_obs100
{
	 mode 202;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = 0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @303(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs0
{
	 mode 203;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @102(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05) ((x1 - 14.854)^2 + (x2 - 16.105)^2 < 400)) ==> @204(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs1
{
	 mode 204;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @103(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05) ((x1 - 24.005)^2 + (x2 - 36.012)^2 < 400)) ==> @205(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs2
{
	 mode 205;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @104(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05) ((x1 - 26.556)^2 + (x2 - 57.773)^2 < 400)) ==> @206(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs3
{
	 mode 206;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @105(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05) ((x1 - 22.258)^2 + (x2 - 79.257)^2 < 400)) ==> @207(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs4
{
	 mode 207;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @106(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05) ((x1 - 11.532)^2 + (x2 - 98.361)^2 < 400)) ==> @208(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs5
{
	 mode 208;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @107(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05) ((x1 - -4.574)^2 + (x2 - 113.216)^2 < 400)) ==> @209(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs6
{
	 mode 209;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @108(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05) ((x1 - -24.481)^2 + (x2 - 122.366)^2 < 400)) ==> @210(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs7
{
	 mode 210;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @109(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05) ((x1 - -46.241)^2 + (x2 - 124.918)^2 < 400)) ==> @211(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs8
{
	 mode 211;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @110(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05) ((x1 - -68.021)^2 + (x2 - 121.913)^2 < 400)) ==> @212(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs9
{
	 mode 212;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @111(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05) ((x1 - -89.741)^2 + (x2 - 118.413)^2 < 400)) ==> @213(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs10
{
	 mode 213;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @112(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05) ((x1 - -110.864)^2 + (x2 - 112.554)^2 < 400)) ==> @214(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs11
{
	 mode 214;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @113(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05) ((x1 - -129.182)^2 + (x2 - 100.534)^2 < 400)) ==> @215(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs12
{
	 mode 215;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @114(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05) ((x1 - -142.946)^2 + (x2 - 83.477)^2 < 400)) ==> @216(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs13
{
	 mode 216;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @115(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05) ((x1 - -154.685)^2 + (x2 - 64.87)^2 < 400)) ==> @217(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs14
{
	 mode 217;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @116(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05) ((x1 - -166.423)^2 + (x2 - 46.263)^2 < 400)) ==> @218(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs15
{
	 mode 218;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @117(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05) ((x1 - -178.141)^2 + (x2 - 27.643)^2 < 400)) ==> @219(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs16
{
	 mode 219;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @118(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05) ((x1 - -189.85)^2 + (x2 - 9.018)^2 < 400)) ==> @220(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs17
{
	 mode 220;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @119(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05) ((x1 - -201.559)^2 + (x2 - -9.607)^2 < 400)) ==> @221(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs18
{
	 mode 221;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @120(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05) ((x1 - -213.517)^2 + (x2 - -28.064)^2 < 400)) ==> @222(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs19
{
	 mode 222;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @121(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05) ((x1 - -229.401)^2 + (x2 - -43.155)^2 < 400)) ==> @223(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs20
{
	 mode 223;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @122(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05) ((x1 - -249.171)^2 + (x2 - -52.599)^2 < 400)) ==> @224(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs21
{
	 mode 224;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @123(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05) ((x1 - -270.891)^2 + (x2 - -55.472)^2 < 400)) ==> @225(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs22
{
	 mode 225;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @124(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05) ((x1 - -292.436)^2 + (x2 - -51.491)^2 < 400)) ==> @226(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs23
{
	 mode 226;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @125(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05) ((x1 - -311.697)^2 + (x2 - -41.048)^2 < 400)) ==> @227(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs24
{
	 mode 227;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @126(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05) ((x1 - -326.788)^2 + (x2 - -25.164)^2 < 400)) ==> @228(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs25
{
	 mode 228;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @127(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05) ((x1 - -336.232)^2 + (x2 - -5.394)^2 < 400)) ==> @229(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs26
{
	 mode 229;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @128(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05) ((x1 - -339.104)^2 + (x2 - 16.326)^2 < 400)) ==> @230(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs27
{
	 mode 230;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @129(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05) ((x1 - -335.124)^2 + (x2 - 37.871)^2 < 400)) ==> @231(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs28
{
	 mode 231;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @130(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05) ((x1 - -326.161)^2 + (x2 - 57.954)^2 < 400)) ==> @232(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs29
{
	 mode 232;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @131(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05) ((x1 - -316.54)^2 + (x2 - 77.738)^2 < 400)) ==> @233(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs30
{
	 mode 233;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @132(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05) ((x1 - -304.142)^2 + (x2 - 95.806)^2 < 400)) ==> @234(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs31
{
	 mode 234;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @133(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05) ((x1 - -286.782)^2 + (x2 - 109.172)^2 < 400)) ==> @235(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs32
{
	 mode 235;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @134(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05) ((x1 - -266.141)^2 + (x2 - 116.519)^2 < 400)) ==> @236(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs33
{
	 mode 236;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @135(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05) ((x1 - -244.239)^2 + (x2 - 117.129)^2 < 400)) ==> @237(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs34
{
	 mode 237;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @136(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05) ((x1 - -223.197)^2 + (x2 - 110.998)^2 < 400)) ==> @238(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs35
{
	 mode 238;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @137(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05) ((x1 - -203.004)^2 + (x2 - 102.265)^2 < 400)) ==> @239(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs36
{
	 mode 239;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @138(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05) ((x1 - -182.921)^2 + (x2 - 93.284)^2 < 400)) ==> @240(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs37
{
	 mode 240;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @139(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05) ((x1 - -162.971)^2 + (x2 - 84.011)^2 < 400)) ==> @241(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs38
{
	 mode 241;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @140(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05) ((x1 - -143.187)^2 + (x2 - 74.389)^2 < 400)) ==> @242(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs39
{
	 mode 242;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @141(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05) ((x1 - -123.621)^2 + (x2 - 64.333)^2 < 400)) ==> @243(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs40
{
	 mode 243;
	 invt:
		 (clock < 41.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @142(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 41.0 - 0.05) (clock < 41.0 + 0.05) ((x1 - -106.189)^2 + (x2 - 51.06)^2 < 400)) ==> @244(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs41
{
	 mode 244;
	 invt:
		 (clock < 42.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @143(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 42.0 - 0.05) (clock < 42.0 + 0.05) ((x1 - -93.712)^2 + (x2 - 33.05)^2 < 400)) ==> @245(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs42
{
	 mode 245;
	 invt:
		 (clock < 43.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @144(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 43.0 - 0.05) (clock < 43.0 + 0.05) ((x1 - -87.411)^2 + (x2 - 12.066)^2 < 400)) ==> @246(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs43
{
	 mode 246;
	 invt:
		 (clock < 44.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @145(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 44.0 - 0.05) (clock < 44.0 + 0.05) ((x1 - -87.903)^2 + (x2 - -9.839)^2 < 400)) ==> @247(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs44
{
	 mode 247;
	 invt:
		 (clock < 45.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @146(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 45.0 - 0.05) (clock < 45.0 + 0.05) ((x1 - -94.625)^2 + (x2 - -30.742)^2 < 400)) ==> @248(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs45
{
	 mode 248;
	 invt:
		 (clock < 46.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @147(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 46.0 - 0.05) (clock < 46.0 + 0.05) ((x1 - -102.713)^2 + (x2 - -51.201)^2 < 400)) ==> @249(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs46
{
	 mode 249;
	 invt:
		 (clock < 47.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @148(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 47.0 - 0.05) (clock < 47.0 + 0.05) ((x1 - -111.122)^2 + (x2 - -71.531)^2 < 400)) ==> @250(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs47
{
	 mode 250;
	 invt:
		 (clock < 48.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @149(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 48.0 - 0.05) (clock < 48.0 + 0.05) ((x1 - -119.916)^2 + (x2 - -91.696)^2 < 400)) ==> @251(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs48
{
	 mode 251;
	 invt:
		 (clock < 49.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @150(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 49.0 - 0.05) (clock < 49.0 + 0.05) ((x1 - -129.71)^2 + (x2 - -111.37)^2 < 400)) ==> @252(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs49
{
	 mode 252;
	 invt:
		 (clock < 50.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @151(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 50.0 - 0.05) (clock < 50.0 + 0.05) ((x1 - -144.31)^2 + (x2 - -127.707)^2 < 400)) ==> @253(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs50
{
	 mode 253;
	 invt:
		 (clock < 51.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @152(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 51.0 - 0.05) (clock < 51.0 + 0.05) ((x1 - -163.243)^2 + (x2 - -138.732)^2 < 400)) ==> @254(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs51
{
	 mode 254;
	 invt:
		 (clock < 52.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @153(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 52.0 - 0.05) (clock < 52.0 + 0.05) ((x1 - -184.657)^2 + (x2 - -143.367)^2 < 400)) ==> @255(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs52
{
	 mode 255;
	 invt:
		 (clock < 53.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @154(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 53.0 - 0.05) (clock < 53.0 + 0.05) ((x1 - -206.455)^2 + (x2 - -141.158)^2 < 400)) ==> @256(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs53
{
	 mode 256;
	 invt:
		 (clock < 54.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @155(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 54.0 - 0.05) (clock < 54.0 + 0.05) ((x1 - -226.504)^2 + (x2 - -132.321)^2 < 400)) ==> @257(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs54
{
	 mode 257;
	 invt:
		 (clock < 55.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @156(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 55.0 - 0.05) (clock < 55.0 + 0.05) ((x1 - -242.84)^2 + (x2 - -117.722)^2 < 400)) ==> @258(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs55
{
	 mode 258;
	 invt:
		 (clock < 56.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @157(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 56.0 - 0.05) (clock < 56.0 + 0.05) ((x1 - -253.865)^2 + (x2 - -98.788)^2 < 400)) ==> @259(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs56
{
	 mode 259;
	 invt:
		 (clock < 57.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @158(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 57.0 - 0.05) (clock < 57.0 + 0.05) ((x1 - -258.501)^2 + (x2 - -77.374)^2 < 400)) ==> @260(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs57
{
	 mode 260;
	 invt:
		 (clock < 58.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @159(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 58.0 - 0.05) (clock < 58.0 + 0.05) ((x1 - -256.576)^2 + (x2 - -55.52)^2 < 400)) ==> @261(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs58
{
	 mode 261;
	 invt:
		 (clock < 59.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @160(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 59.0 - 0.05) (clock < 59.0 + 0.05) ((x1 - -252.92)^2 + (x2 - -33.826)^2 < 400)) ==> @262(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs59
{
	 mode 262;
	 invt:
		 (clock < 60.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @161(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 60.0 - 0.05) (clock < 60.0 + 0.05) ((x1 - -246.624)^2 + (x2 - -12.834)^2 < 400)) ==> @263(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs60
{
	 mode 263;
	 invt:
		 (clock < 61.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @162(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 61.0 - 0.05) (clock < 61.0 + 0.05) ((x1 - -234.187)^2 + (x2 - 5.204)^2 < 400)) ==> @264(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs61
{
	 mode 264;
	 invt:
		 (clock < 62.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @163(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 62.0 - 0.05) (clock < 62.0 + 0.05) ((x1 - -216.785)^2 + (x2 - 18.515)^2 < 400)) ==> @265(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs62
{
	 mode 265;
	 invt:
		 (clock < 63.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @164(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @63(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 63.0 - 0.05) (clock < 63.0 + 0.05) ((x1 - -196.121)^2 + (x2 - 25.797)^2 < 400)) ==> @266(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs63
{
	 mode 266;
	 invt:
		 (clock < 64.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @165(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @64(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 64.0 - 0.05) (clock < 64.0 + 0.05) ((x1 - -174.218)^2 + (x2 - 26.338)^2 < 400)) ==> @267(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs64
{
	 mode 267;
	 invt:
		 (clock < 65.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @166(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @65(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 65.0 - 0.05) (clock < 65.0 + 0.05) ((x1 - -153.209)^2 + (x2 - 20.108)^2 < 400)) ==> @268(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs65
{
	 mode 268;
	 invt:
		 (clock < 66.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @167(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @66(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 66.0 - 0.05) (clock < 66.0 + 0.05) ((x1 - -133.105)^2 + (x2 - 11.172)^2 < 400)) ==> @269(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs66
{
	 mode 269;
	 invt:
		 (clock < 67.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @168(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @67(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 67.0 - 0.05) (clock < 67.0 + 0.05) ((x1 - -113.377)^2 + (x2 - 1.496)^2 < 400)) ==> @270(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs67
{
	 mode 270;
	 invt:
		 (clock < 68.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @169(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @68(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 68.0 - 0.05) (clock < 68.0 + 0.05) ((x1 - -96.018)^2 + (x2 - -12.001)^2 < 400)) ==> @271(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs68
{
	 mode 271;
	 invt:
		 (clock < 69.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @170(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @69(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 69.0 - 0.05) (clock < 69.0 + 0.05) ((x1 - -78.898)^2 + (x2 - -25.819)^2 < 400)) ==> @272(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs69
{
	 mode 272;
	 invt:
		 (clock < 70.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @171(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @70(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 70.0 - 0.05) (clock < 70.0 + 0.05) ((x1 - -61.779)^2 + (x2 - -39.636)^2 < 400)) ==> @273(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs70
{
	 mode 273;
	 invt:
		 (clock < 71.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @172(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @71(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 71.0 - 0.05) (clock < 71.0 + 0.05) ((x1 - -44.659)^2 + (x2 - -53.453)^2 < 400)) ==> @274(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs71
{
	 mode 274;
	 invt:
		 (clock < 72.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @173(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @72(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 72.0 - 0.05) (clock < 72.0 + 0.05) ((x1 - -27.539)^2 + (x2 - -67.27)^2 < 400)) ==> @275(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs72
{
	 mode 275;
	 invt:
		 (clock < 73.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @174(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @73(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 73.0 - 0.05) (clock < 73.0 + 0.05) ((x1 - -10.419)^2 + (x2 - -81.087)^2 < 400)) ==> @276(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs73
{
	 mode 276;
	 invt:
		 (clock < 74.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @175(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @74(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 74.0 - 0.05) (clock < 74.0 + 0.05) ((x1 - 6.709)^2 + (x2 - -94.894)^2 < 400)) ==> @277(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs74
{
	 mode 277;
	 invt:
		 (clock < 75.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @176(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @75(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 75.0 - 0.05) (clock < 75.0 + 0.05) ((x1 - 23.85)^2 + (x2 - -108.684)^2 < 400)) ==> @278(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs75
{
	 mode 278;
	 invt:
		 (clock < 76.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @177(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @76(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 76.0 - 0.05) (clock < 76.0 + 0.05) ((x1 - 40.992)^2 + (x2 - -122.474)^2 < 400)) ==> @279(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs76
{
	 mode 279;
	 invt:
		 (clock < 77.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @178(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @77(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 77.0 - 0.05) (clock < 77.0 + 0.05) ((x1 - 58.04)^2 + (x2 - -136.375)^2 < 400)) ==> @280(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs77
{
	 mode 280;
	 invt:
		 (clock < 78.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @179(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @78(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 78.0 - 0.05) (clock < 78.0 + 0.05) ((x1 - 71.677)^2 + (x2 - -153.524)^2 < 400)) ==> @281(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs78
{
	 mode 281;
	 invt:
		 (clock < 79.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @180(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @79(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 79.0 - 0.05) (clock < 79.0 + 0.05) ((x1 - 79.347)^2 + (x2 - -174.047)^2 < 400)) ==> @282(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs79
{
	 mode 282;
	 invt:
		 (clock < 80.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @181(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @80(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 80.0 - 0.05) (clock < 80.0 + 0.05) ((x1 - 80.3)^2 + (x2 - -195.936)^2 < 400)) ==> @283(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs80
{
	 mode 283;
	 invt:
		 (clock < 81.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @182(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @81(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 81.0 - 0.05) (clock < 81.0 + 0.05) ((x1 - 74.443)^2 + (x2 - -217.048)^2 < 400)) ==> @284(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs81
{
	 mode 284;
	 invt:
		 (clock < 82.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @183(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @82(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 82.0 - 0.05) (clock < 82.0 + 0.05) ((x1 - 62.348)^2 + (x2 - -235.316)^2 < 400)) ==> @285(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs82
{
	 mode 285;
	 invt:
		 (clock < 83.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @184(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @83(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 83.0 - 0.05) (clock < 83.0 + 0.05) ((x1 - 45.2)^2 + (x2 - -248.954)^2 < 400)) ==> @286(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs83
{
	 mode 286;
	 invt:
		 (clock < 84.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @185(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @84(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 84.0 - 0.05) (clock < 84.0 + 0.05) ((x1 - 24.677)^2 + (x2 - -256.624)^2 < 400)) ==> @287(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs84
{
	 mode 287;
	 invt:
		 (clock < 85.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @186(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @85(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 85.0 - 0.05) (clock < 85.0 + 0.05) ((x1 - 2.788)^2 + (x2 - -257.577)^2 < 400)) ==> @288(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs85
{
	 mode 288;
	 invt:
		 (clock < 86.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @187(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @86(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 86.0 - 0.05) (clock < 86.0 + 0.05) ((x1 - -18.324)^2 + (x2 - -251.72)^2 < 400)) ==> @289(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs86
{
	 mode 289;
	 invt:
		 (clock < 87.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @188(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @87(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 87.0 - 0.05) (clock < 87.0 + 0.05) ((x1 - -36.593)^2 + (x2 - -239.625)^2 < 400)) ==> @290(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs87
{
	 mode 290;
	 invt:
		 (clock < 88.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @189(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @88(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 88.0 - 0.05) (clock < 88.0 + 0.05) ((x1 - -50.23)^2 + (x2 - -222.477)^2 < 400)) ==> @291(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs88
{
	 mode 291;
	 invt:
		 (clock < 89.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @190(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @89(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 89.0 - 0.05) (clock < 89.0 + 0.05) ((x1 - -57.901)^2 + (x2 - -201.953)^2 < 400)) ==> @292(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs89
{
	 mode 292;
	 invt:
		 (clock < 90.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @191(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @90(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 90.0 - 0.05) (clock < 90.0 + 0.05) ((x1 - -59.406)^2 + (x2 - -180.048)^2 < 400)) ==> @293(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs90
{
	 mode 293;
	 invt:
		 (clock < 91.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @192(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @91(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 91.0 - 0.05) (clock < 91.0 + 0.05) ((x1 - -59.672)^2 + (x2 - -158.05)^2 < 400)) ==> @294(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs91
{
	 mode 294;
	 invt:
		 (clock < 92.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @193(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @92(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 92.0 - 0.05) (clock < 92.0 + 0.05) ((x1 - -59.939)^2 + (x2 - -136.051)^2 < 400)) ==> @295(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs92
{
	 mode 295;
	 invt:
		 (clock < 93.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @194(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @93(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 93.0 - 0.05) (clock < 93.0 + 0.05) ((x1 - -60.006)^2 + (x2 - -114.056)^2 < 400)) ==> @296(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs93
{
	 mode 296;
	 invt:
		 (clock < 94.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @195(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @94(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 94.0 - 0.05) (clock < 94.0 + 0.05) ((x1 - -56.194)^2 + (x2 - -92.412)^2 < 400)) ==> @297(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs94
{
	 mode 297;
	 invt:
		 (clock < 95.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @196(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @95(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 95.0 - 0.05) (clock < 95.0 + 0.05) ((x1 - -51.689)^2 + (x2 - -70.878)^2 < 400)) ==> @298(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs95
{
	 mode 298;
	 invt:
		 (clock < 96.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @197(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @96(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 96.0 - 0.05) (clock < 96.0 + 0.05) ((x1 - -47.183)^2 + (x2 - -49.344)^2 < 400)) ==> @299(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs96
{
	 mode 299;
	 invt:
		 (clock < 97.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @198(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @97(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 97.0 - 0.05) (clock < 97.0 + 0.05) ((x1 - -42.678)^2 + (x2 - -27.811)^2 < 400)) ==> @300(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs97
{
	 mode 300;
	 invt:
		 (clock < 98.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @199(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @98(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 98.0 - 0.05) (clock < 98.0 + 0.05) ((x1 - -38.173)^2 + (x2 - -6.277)^2 < 400)) ==> @301(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs98
{
	 mode 301;
	 invt:
		 (clock < 99.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @200(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @99(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 99.0 - 0.05) (clock < 99.0 + 0.05) ((x1 - -33.668)^2 + (x2 - 15.257)^2 < 400)) ==> @302(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs99
{
	 mode 302;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @201(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @100(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));

		 (and (clock > 100.0 - 0.05) (clock < 100.0 + 0.05) ((x1 - -29.163)^2 + (x2 - 36.791)^2 < 400)) ==> @303(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
// adjusting_right_obs100
{
	 mode 303;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = 22.0 * cos(theta);
		 d/dt[x2] = 22.0 * sin(theta);
		 d/dt[theta] = -0.31415;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @202(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
		 (true) ==> @101(and (x1' = x1) (x2' = x2) (theta' = theta) (clock' = clock));
}
init:
@1 (and (x1 = 0.0) (x2 = 0.0) (theta = 0.6702646032358428) (clock = 0.0));

goal:
@101 true;
@202 true;
@303 true;
