[0,30.05] time;
[-17.083,5.0] x1;
[-7.667,5.686] x2;
[-9.926,5.0] x3;
[-15.538,5.0] x4;
[-7.172000000000001,8.283999999999999] x5;
[-10.809999999999999,5.0] x6;
[-7.061999999999999,6.72] x7;
[-6.7330000000000005,6.454] x8;
[-9.677,5.0] x9;
[0,30.05] clock;

// elf_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs4
{
	 mode 5;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs5
{
	 mode 6;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.214 - 0.1) (x1 < -9.214 + 0.1))) (and (and (x4 > -3.036 - 0.1) (x4 < -3.036 + 0.1)) (and (x7 > -1.221 - 0.1) (x7 < -1.221 + 0.1)))) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs6
{
	 mode 7;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.807 - 0.1) (x1 < -9.807 + 0.1))) (and (and (x4 > -3.251 - 0.1) (x4 < -3.251 + 0.1)) (and (x7 > -1.316 - 0.1) (x7 < -1.316 + 0.1)))) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs7
{
	 mode 8;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -10.249 - 0.1) (x1 < -10.249 + 0.1))) (and (and (x4 > -3.4 - 0.1) (x4 < -3.4 + 0.1)) (and (x7 > -1.366 - 0.1) (x7 < -1.366 + 0.1)))) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs8
{
	 mode 9;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -10.568 - 0.1) (x1 < -10.568 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.397 - 0.1) (x7 < -1.397 + 0.1)))) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs9
{
	 mode 10;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -10.796 - 0.1) (x1 < -10.796 + 0.1))) (and (and (x4 > -3.591 - 0.1) (x4 < -3.591 + 0.1)) (and (x7 > -1.423 - 0.1) (x7 < -1.423 + 0.1)))) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs10
{
	 mode 11;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x1 > -10.959 - 0.1) (x1 < -10.959 + 0.1))) (and (and (x4 > -3.651 - 0.1) (x4 < -3.651 + 0.1)) (and (x7 > -1.446 - 0.1) (x7 < -1.446 + 0.1)))) ==> @12(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs11
{
	 mode 12;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x1 > -11.077 - 0.1) (x1 < -11.077 + 0.1))) (and (and (x4 > -3.695 - 0.1) (x4 < -3.695 + 0.1)) (and (x7 > -1.465 - 0.1) (x7 < -1.465 + 0.1)))) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs12
{
	 mode 13;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x1 > -11.162 - 0.1) (x1 < -11.162 + 0.1))) (and (and (x4 > -3.727 - 0.1) (x4 < -3.727 + 0.1)) (and (x7 > -1.48 - 0.1) (x7 < -1.48 + 0.1)))) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs13
{
	 mode 14;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x1 > -11.224 - 0.1) (x1 < -11.224 + 0.1))) (and (and (x4 > -3.751 - 0.1) (x4 < -3.751 + 0.1)) (and (x7 > -1.49 - 0.1) (x7 < -1.49 + 0.1)))) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs14
{
	 mode 15;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x1 > -11.269 - 0.1) (x1 < -11.269 + 0.1))) (and (and (x4 > -3.768 - 0.1) (x4 < -3.768 + 0.1)) (and (x7 > -1.496 - 0.1) (x7 < -1.496 + 0.1)))) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs15
{
	 mode 16;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x1 > -11.302 - 0.1) (x1 < -11.302 + 0.1))) (and (and (x4 > -3.78 - 0.1) (x4 < -3.78 + 0.1)) (and (x7 > -1.501 - 0.1) (x7 < -1.501 + 0.1)))) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs16
{
	 mode 17;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x1 > -11.063 - 0.1) (x1 < -11.063 + 0.1))) (and (and (x4 > -4.632 - 0.1) (x4 < -4.632 + 0.1)) (and (x7 > -0.921 - 0.1) (x7 < -0.921 + 0.1)))) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs17
{
	 mode 18;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x1 > -10.407 - 0.1) (x1 < -10.407 + 0.1))) (and (and (x4 > -6.717 - 0.1) (x4 < -6.717 + 0.1)) (and (x7 > 0.461 - 0.1) (x7 < 0.461 + 0.1)))) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs18
{
	 mode 19;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x1 > -9.848 - 0.1) (x1 < -9.848 + 0.1))) (and (and (x4 > -8.302 - 0.1) (x4 < -8.302 + 0.1)) (and (x7 > 1.33 - 0.1) (x7 < 1.33 + 0.1)))) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs19
{
	 mode 20;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x1 > -9.49 - 0.1) (x1 < -9.49 + 0.1))) (and (and (x4 > -9.209 - 0.1) (x4 < -9.209 + 0.1)) (and (x7 > 1.617 - 0.1) (x7 < 1.617 + 0.1)))) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs20
{
	 mode 21;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05)) (and (x1 > -9.27 - 0.1) (x1 < -9.27 + 0.1))) (and (and (x4 > -9.749 - 0.1) (x4 < -9.749 + 0.1)) (and (x7 > 1.666 - 0.1) (x7 < 1.666 + 0.1)))) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs21
{
	 mode 22;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05)) (and (x1 > -9.135 - 0.1) (x1 < -9.135 + 0.1))) (and (and (x4 > -10.106 - 0.1) (x4 < -10.106 + 0.1)) (and (x7 > 1.673 - 0.1) (x7 < 1.673 + 0.1)))) ==> @23(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs22
{
	 mode 23;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05)) (and (x1 > -9.05 - 0.1) (x1 < -9.05 + 0.1))) (and (and (x4 > -10.352 - 0.1) (x4 < -10.352 + 0.1)) (and (x7 > 1.691 - 0.1) (x7 < 1.691 + 0.1)))) ==> @24(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs23
{
	 mode 24;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05)) (and (x1 > -8.998 - 0.1) (x1 < -8.998 + 0.1))) (and (and (x4 > -10.522 - 0.1) (x4 < -10.522 + 0.1)) (and (x7 > 1.717 - 0.1) (x7 < 1.717 + 0.1)))) ==> @25(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs24
{
	 mode 25;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05)) (and (x1 > -9.549 - 0.1) (x1 < -9.549 + 0.1))) (and (and (x4 > -9.464 - 0.1) (x4 < -9.464 + 0.1)) (and (x7 > 1.16 - 0.1) (x7 < 1.16 + 0.1)))) ==> @26(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs25
{
	 mode 26;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05)) (and (x1 > -11.007 - 0.1) (x1 < -11.007 + 0.1))) (and (and (x4 > -6.351 - 0.1) (x4 < -6.351 + 0.1)) (and (x7 > -0.475 - 0.1) (x7 < -0.475 + 0.1)))) ==> @27(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs26
{
	 mode 27;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05)) (and (x1 > -11.93 - 0.1) (x1 < -11.93 + 0.1))) (and (and (x4 > -4.048 - 0.1) (x4 < -4.048 + 0.1)) (and (x7 > -1.718 - 0.1) (x7 < -1.718 + 0.1)))) ==> @28(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs27
{
	 mode 28;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05)) (and (x1 > -12.063 - 0.1) (x1 < -12.063 + 0.1))) (and (and (x4 > -3.347 - 0.1) (x4 < -3.347 + 0.1)) (and (x7 > -2.062 - 0.1) (x7 < -2.062 + 0.1)))) ==> @29(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs28
{
	 mode 29;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05)) (and (x1 > -11.838 - 0.1) (x1 < -11.838 + 0.1))) (and (and (x4 > -3.519 - 0.1) (x4 < -3.519 + 0.1)) (and (x7 > -1.873 - 0.1) (x7 < -1.873 + 0.1)))) ==> @30(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs29
{
	 mode 30;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05)) (and (x1 > -11.619 - 0.1) (x1 < -11.619 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.608 - 0.1) (x7 < -1.608 + 0.1)))) ==> @31(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs30
{
	 mode 31;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs0
{
	 mode 32;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @33(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs1
{
	 mode 33;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @34(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs2
{
	 mode 34;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @35(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs3
{
	 mode 35;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @36(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs4
{
	 mode 36;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @37(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs5
{
	 mode 37;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.214 - 0.1) (x1 < -9.214 + 0.1))) (and (and (x4 > -3.036 - 0.1) (x4 < -3.036 + 0.1)) (and (x7 > -1.221 - 0.1) (x7 < -1.221 + 0.1)))) ==> @38(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs6
{
	 mode 38;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.807 - 0.1) (x1 < -9.807 + 0.1))) (and (and (x4 > -3.251 - 0.1) (x4 < -3.251 + 0.1)) (and (x7 > -1.316 - 0.1) (x7 < -1.316 + 0.1)))) ==> @39(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs7
{
	 mode 39;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -10.249 - 0.1) (x1 < -10.249 + 0.1))) (and (and (x4 > -3.4 - 0.1) (x4 < -3.4 + 0.1)) (and (x7 > -1.366 - 0.1) (x7 < -1.366 + 0.1)))) ==> @40(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs8
{
	 mode 40;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -10.568 - 0.1) (x1 < -10.568 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.397 - 0.1) (x7 < -1.397 + 0.1)))) ==> @41(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs9
{
	 mode 41;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -10.796 - 0.1) (x1 < -10.796 + 0.1))) (and (and (x4 > -3.591 - 0.1) (x4 < -3.591 + 0.1)) (and (x7 > -1.423 - 0.1) (x7 < -1.423 + 0.1)))) ==> @42(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs10
{
	 mode 42;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x1 > -10.959 - 0.1) (x1 < -10.959 + 0.1))) (and (and (x4 > -3.651 - 0.1) (x4 < -3.651 + 0.1)) (and (x7 > -1.446 - 0.1) (x7 < -1.446 + 0.1)))) ==> @43(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs11
{
	 mode 43;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x1 > -11.077 - 0.1) (x1 < -11.077 + 0.1))) (and (and (x4 > -3.695 - 0.1) (x4 < -3.695 + 0.1)) (and (x7 > -1.465 - 0.1) (x7 < -1.465 + 0.1)))) ==> @44(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs12
{
	 mode 44;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x1 > -11.162 - 0.1) (x1 < -11.162 + 0.1))) (and (and (x4 > -3.727 - 0.1) (x4 < -3.727 + 0.1)) (and (x7 > -1.48 - 0.1) (x7 < -1.48 + 0.1)))) ==> @45(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs13
{
	 mode 45;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x1 > -11.224 - 0.1) (x1 < -11.224 + 0.1))) (and (and (x4 > -3.751 - 0.1) (x4 < -3.751 + 0.1)) (and (x7 > -1.49 - 0.1) (x7 < -1.49 + 0.1)))) ==> @46(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs14
{
	 mode 46;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x1 > -11.269 - 0.1) (x1 < -11.269 + 0.1))) (and (and (x4 > -3.768 - 0.1) (x4 < -3.768 + 0.1)) (and (x7 > -1.496 - 0.1) (x7 < -1.496 + 0.1)))) ==> @47(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs15
{
	 mode 47;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x1 > -11.302 - 0.1) (x1 < -11.302 + 0.1))) (and (and (x4 > -3.78 - 0.1) (x4 < -3.78 + 0.1)) (and (x7 > -1.501 - 0.1) (x7 < -1.501 + 0.1)))) ==> @48(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs16
{
	 mode 48;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x1 > -11.063 - 0.1) (x1 < -11.063 + 0.1))) (and (and (x4 > -4.632 - 0.1) (x4 < -4.632 + 0.1)) (and (x7 > -0.921 - 0.1) (x7 < -0.921 + 0.1)))) ==> @49(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs17
{
	 mode 49;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x1 > -10.407 - 0.1) (x1 < -10.407 + 0.1))) (and (and (x4 > -6.717 - 0.1) (x4 < -6.717 + 0.1)) (and (x7 > 0.461 - 0.1) (x7 < 0.461 + 0.1)))) ==> @50(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs18
{
	 mode 50;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x1 > -9.848 - 0.1) (x1 < -9.848 + 0.1))) (and (and (x4 > -8.302 - 0.1) (x4 < -8.302 + 0.1)) (and (x7 > 1.33 - 0.1) (x7 < 1.33 + 0.1)))) ==> @51(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs19
{
	 mode 51;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x1 > -9.49 - 0.1) (x1 < -9.49 + 0.1))) (and (and (x4 > -9.209 - 0.1) (x4 < -9.209 + 0.1)) (and (x7 > 1.617 - 0.1) (x7 < 1.617 + 0.1)))) ==> @52(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs20
{
	 mode 52;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05)) (and (x1 > -9.27 - 0.1) (x1 < -9.27 + 0.1))) (and (and (x4 > -9.749 - 0.1) (x4 < -9.749 + 0.1)) (and (x7 > 1.666 - 0.1) (x7 < 1.666 + 0.1)))) ==> @53(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs21
{
	 mode 53;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05)) (and (x1 > -9.135 - 0.1) (x1 < -9.135 + 0.1))) (and (and (x4 > -10.106 - 0.1) (x4 < -10.106 + 0.1)) (and (x7 > 1.673 - 0.1) (x7 < 1.673 + 0.1)))) ==> @54(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs22
{
	 mode 54;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05)) (and (x1 > -9.05 - 0.1) (x1 < -9.05 + 0.1))) (and (and (x4 > -10.352 - 0.1) (x4 < -10.352 + 0.1)) (and (x7 > 1.691 - 0.1) (x7 < 1.691 + 0.1)))) ==> @55(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs23
{
	 mode 55;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05)) (and (x1 > -8.998 - 0.1) (x1 < -8.998 + 0.1))) (and (and (x4 > -10.522 - 0.1) (x4 < -10.522 + 0.1)) (and (x7 > 1.717 - 0.1) (x7 < 1.717 + 0.1)))) ==> @56(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs24
{
	 mode 56;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05)) (and (x1 > -9.549 - 0.1) (x1 < -9.549 + 0.1))) (and (and (x4 > -9.464 - 0.1) (x4 < -9.464 + 0.1)) (and (x7 > 1.16 - 0.1) (x7 < 1.16 + 0.1)))) ==> @57(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs25
{
	 mode 57;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05)) (and (x1 > -11.007 - 0.1) (x1 < -11.007 + 0.1))) (and (and (x4 > -6.351 - 0.1) (x4 < -6.351 + 0.1)) (and (x7 > -0.475 - 0.1) (x7 < -0.475 + 0.1)))) ==> @58(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs26
{
	 mode 58;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05)) (and (x1 > -11.93 - 0.1) (x1 < -11.93 + 0.1))) (and (and (x4 > -4.048 - 0.1) (x4 < -4.048 + 0.1)) (and (x7 > -1.718 - 0.1) (x7 < -1.718 + 0.1)))) ==> @59(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs27
{
	 mode 59;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05)) (and (x1 > -12.063 - 0.1) (x1 < -12.063 + 0.1))) (and (and (x4 > -3.347 - 0.1) (x4 < -3.347 + 0.1)) (and (x7 > -2.062 - 0.1) (x7 < -2.062 + 0.1)))) ==> @60(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs28
{
	 mode 60;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05)) (and (x1 > -11.838 - 0.1) (x1 < -11.838 + 0.1))) (and (and (x4 > -3.519 - 0.1) (x4 < -3.519 + 0.1)) (and (x7 > -1.873 - 0.1) (x7 < -1.873 + 0.1)))) ==> @61(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs29
{
	 mode 61;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05)) (and (x1 > -11.619 - 0.1) (x1 < -11.619 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.608 - 0.1) (x7 < -1.608 + 0.1)))) ==> @62(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs30
{
	 mode 62;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
init:
@1 (and (and (and (x1 = 0.0) (x2 = 0.0)) (and (x3 = 0.0) (and (x4 = 0.0) (x5 = 0.0)))) (and (and (x6 = 0.0) (x7 = 0.0)) (and (x8 = 0.0) (and (x9 = 0.0) (clock = 0.0)))));

goal:
@31 true;
@62 true;
