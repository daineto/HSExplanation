[0,100.05] time;
[-17.121000000000002,5.0] x1;
[-7.667,5.808] x2;
[-9.962,5.0] x3;
[-15.846,5.0] x4;
[-7.177,8.408999999999999] x5;
[-10.805,5.0] x6;
[-7.075,6.787] x7;
[-6.768,6.471] x8;
[-9.677,5.0] x9;
[0,100.05] clock;

// elf_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @102(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @103(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @104(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @105(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs4
{
	 mode 5;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @106(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs5
{
	 mode 6;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @107(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.214 - 0.1) (x1 < -9.214 + 0.1))) (and (and (x4 > -3.036 - 0.1) (x4 < -3.036 + 0.1)) (and (x7 > -1.221 - 0.1) (x7 < -1.221 + 0.1)))) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs6
{
	 mode 7;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @108(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.807 - 0.1) (x1 < -9.807 + 0.1))) (and (and (x4 > -3.251 - 0.1) (x4 < -3.251 + 0.1)) (and (x7 > -1.316 - 0.1) (x7 < -1.316 + 0.1)))) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs7
{
	 mode 8;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @109(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -10.249 - 0.1) (x1 < -10.249 + 0.1))) (and (and (x4 > -3.4 - 0.1) (x4 < -3.4 + 0.1)) (and (x7 > -1.366 - 0.1) (x7 < -1.366 + 0.1)))) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs8
{
	 mode 9;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @110(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -10.568 - 0.1) (x1 < -10.568 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.397 - 0.1) (x7 < -1.397 + 0.1)))) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs9
{
	 mode 10;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @111(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -10.796 - 0.1) (x1 < -10.796 + 0.1))) (and (and (x4 > -3.591 - 0.1) (x4 < -3.591 + 0.1)) (and (x7 > -1.423 - 0.1) (x7 < -1.423 + 0.1)))) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs10
{
	 mode 11;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @112(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x1 > -10.959 - 0.1) (x1 < -10.959 + 0.1))) (and (and (x4 > -3.651 - 0.1) (x4 < -3.651 + 0.1)) (and (x7 > -1.446 - 0.1) (x7 < -1.446 + 0.1)))) ==> @12(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs11
{
	 mode 12;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @113(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x1 > -11.077 - 0.1) (x1 < -11.077 + 0.1))) (and (and (x4 > -3.695 - 0.1) (x4 < -3.695 + 0.1)) (and (x7 > -1.465 - 0.1) (x7 < -1.465 + 0.1)))) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs12
{
	 mode 13;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @114(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x1 > -11.162 - 0.1) (x1 < -11.162 + 0.1))) (and (and (x4 > -3.727 - 0.1) (x4 < -3.727 + 0.1)) (and (x7 > -1.48 - 0.1) (x7 < -1.48 + 0.1)))) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs13
{
	 mode 14;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @115(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x1 > -11.224 - 0.1) (x1 < -11.224 + 0.1))) (and (and (x4 > -3.751 - 0.1) (x4 < -3.751 + 0.1)) (and (x7 > -1.49 - 0.1) (x7 < -1.49 + 0.1)))) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs14
{
	 mode 15;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @116(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x1 > -11.269 - 0.1) (x1 < -11.269 + 0.1))) (and (and (x4 > -3.768 - 0.1) (x4 < -3.768 + 0.1)) (and (x7 > -1.496 - 0.1) (x7 < -1.496 + 0.1)))) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs15
{
	 mode 16;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @117(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x1 > -11.04 - 0.1) (x1 < -11.04 + 0.1))) (and (and (x4 > -4.624 - 0.1) (x4 < -4.624 + 0.1)) (and (x7 > -0.916 - 0.1) (x7 < -0.916 + 0.1)))) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs16
{
	 mode 17;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @118(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x1 > -10.392 - 0.1) (x1 < -10.392 + 0.1))) (and (and (x4 > -6.713 - 0.1) (x4 < -6.713 + 0.1)) (and (x7 > 0.468 - 0.1) (x7 < 0.468 + 0.1)))) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs17
{
	 mode 18;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @119(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x1 > -9.839 - 0.1) (x1 < -9.839 + 0.1))) (and (and (x4 > -8.302 - 0.1) (x4 < -8.302 + 0.1)) (and (x7 > 1.339 - 0.1) (x7 < 1.339 + 0.1)))) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs18
{
	 mode 19;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @120(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x1 > -9.484 - 0.1) (x1 < -9.484 + 0.1))) (and (and (x4 > -9.212 - 0.1) (x4 < -9.212 + 0.1)) (and (x7 > 1.626 - 0.1) (x7 < 1.626 + 0.1)))) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs19
{
	 mode 20;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @121(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x1 > -9.266 - 0.1) (x1 < -9.266 + 0.1))) (and (and (x4 > -9.752 - 0.1) (x4 < -9.752 + 0.1)) (and (x7 > 1.674 - 0.1) (x7 < 1.674 + 0.1)))) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs20
{
	 mode 21;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @122(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05)) (and (x1 > -9.673 - 0.1) (x1 < -9.673 + 0.1))) (and (and (x4 > -8.999 - 0.1) (x4 < -8.999 + 0.1)) (and (x7 > 1.113 - 0.1) (x7 < 1.113 + 0.1)))) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs21
{
	 mode 22;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @123(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05)) (and (x1 > -10.978 - 0.1) (x1 < -10.978 + 0.1))) (and (and (x4 > -6.188 - 0.1) (x4 < -6.188 + 0.1)) (and (x7 > -0.487 - 0.1) (x7 < -0.487 + 0.1)))) ==> @23(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs22
{
	 mode 23;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @124(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05)) (and (x1 > -11.837 - 0.1) (x1 < -11.837 + 0.1))) (and (and (x4 > -4.048 - 0.1) (x4 < -4.048 + 0.1)) (and (x7 > -1.703 - 0.1) (x7 < -1.703 + 0.1)))) ==> @24(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs23
{
	 mode 24;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @125(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05)) (and (x1 > -11.978 - 0.1) (x1 < -11.978 + 0.1))) (and (and (x4 > -3.379 - 0.1) (x4 < -3.379 + 0.1)) (and (x7 > -2.045 - 0.1) (x7 < -2.045 + 0.1)))) ==> @25(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs24
{
	 mode 25;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @126(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05)) (and (x1 > -11.786 - 0.1) (x1 < -11.786 + 0.1))) (and (and (x4 > -3.533 - 0.1) (x4 < -3.533 + 0.1)) (and (x7 > -1.864 - 0.1) (x7 < -1.864 + 0.1)))) ==> @26(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs25
{
	 mode 26;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @127(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05)) (and (x1 > -11.591 - 0.1) (x1 < -11.591 + 0.1))) (and (and (x4 > -3.807 - 0.1) (x4 < -3.807 + 0.1)) (and (x7 > -1.606 - 0.1) (x7 < -1.606 + 0.1)))) ==> @27(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs26
{
	 mode 27;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @128(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05)) (and (x1 > -11.494 - 0.1) (x1 < -11.494 + 0.1))) (and (and (x4 > -3.925 - 0.1) (x4 < -3.925 + 0.1)) (and (x7 > -1.473 - 0.1) (x7 < -1.473 + 0.1)))) ==> @28(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs27
{
	 mode 28;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @129(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05)) (and (x1 > -11.465 - 0.1) (x1 < -11.465 + 0.1))) (and (and (x4 > -3.911 - 0.1) (x4 < -3.911 + 0.1)) (and (x7 > -1.459 - 0.1) (x7 < -1.459 + 0.1)))) ==> @29(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs28
{
	 mode 29;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @130(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05)) (and (x1 > -11.455 - 0.1) (x1 < -11.455 + 0.1))) (and (and (x4 > -3.859 - 0.1) (x4 < -3.859 + 0.1)) (and (x7 > -1.493 - 0.1) (x7 < -1.493 + 0.1)))) ==> @30(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs29
{
	 mode 30;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @131(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05)) (and (x1 > -11.443 - 0.1) (x1 < -11.443 + 0.1))) (and (and (x4 > -3.825 - 0.1) (x4 < -3.825 + 0.1)) (and (x7 > -1.521 - 0.1) (x7 < -1.521 + 0.1)))) ==> @31(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs30
{
	 mode 31;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @132(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05)) (and (x1 > -11.429 - 0.1) (x1 < -11.429 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.529 - 0.1) (x7 < -1.529 + 0.1)))) ==> @32(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs31
{
	 mode 32;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @133(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05)) (and (x1 > -11.416 - 0.1) (x1 < -11.416 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.526 - 0.1) (x7 < -1.526 + 0.1)))) ==> @33(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs32
{
	 mode 33;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @134(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05)) (and (x1 > -11.407 - 0.1) (x1 < -11.407 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.519 - 0.1) (x7 < -1.519 + 0.1)))) ==> @34(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs33
{
	 mode 34;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @135(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05)) (and (x1 > -11.402 - 0.1) (x1 < -11.402 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.515 - 0.1) (x7 < -1.515 + 0.1)))) ==> @35(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs34
{
	 mode 35;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @136(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05)) (and (x1 > -11.399 - 0.1) (x1 < -11.399 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @36(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs35
{
	 mode 36;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @137(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05)) (and (x1 > -11.396 - 0.1) (x1 < -11.396 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @37(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs36
{
	 mode 37;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @138(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05)) (and (x1 > -11.394 - 0.1) (x1 < -11.394 + 0.1))) (and (and (x4 > -3.814 - 0.1) (x4 < -3.814 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @38(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs37
{
	 mode 38;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @139(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05)) (and (x1 > -11.393 - 0.1) (x1 < -11.393 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @39(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs38
{
	 mode 39;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @140(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05)) (and (x1 > -11.392 - 0.1) (x1 < -11.392 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @40(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs39
{
	 mode 40;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @141(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05)) (and (x1 > -11.137 - 0.1) (x1 < -11.137 + 0.1))) (and (and (x4 > -4.619 - 0.1) (x4 < -4.619 + 0.1)) (and (x7 > -0.958 - 0.1) (x7 < -0.958 + 0.1)))) ==> @41(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs40
{
	 mode 41;
	 invt:
		 (clock < 41.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @142(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 41.0 - 0.05) (clock < 41.0 + 0.05)) (and (x1 > -10.461 - 0.1) (x1 < -10.461 + 0.1))) (and (and (x4 > -6.69 - 0.1) (x4 < -6.69 + 0.1)) (and (x7 > 0.417 - 0.1) (x7 < 0.417 + 0.1)))) ==> @42(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs41
{
	 mode 42;
	 invt:
		 (clock < 42.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @143(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 42.0 - 0.05) (clock < 42.0 + 0.05)) (and (x1 > -9.883 - 0.1) (x1 < -9.883 + 0.1))) (and (and (x4 > -8.279 - 0.1) (x4 < -8.279 + 0.1)) (and (x7 > 1.293 - 0.1) (x7 < 1.293 + 0.1)))) ==> @43(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs42
{
	 mode 43;
	 invt:
		 (clock < 43.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @144(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 43.0 - 0.05) (clock < 43.0 + 0.05)) (and (x1 > -9.511 - 0.1) (x1 < -9.511 + 0.1))) (and (and (x4 > -9.19 - 0.1) (x4 < -9.19 + 0.1)) (and (x7 > 1.588 - 0.1) (x7 < 1.588 + 0.1)))) ==> @44(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs43
{
	 mode 44;
	 invt:
		 (clock < 44.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @145(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 44.0 - 0.05) (clock < 44.0 + 0.05)) (and (x1 > -9.283 - 0.1) (x1 < -9.283 + 0.1))) (and (and (x4 > -9.732 - 0.1) (x4 < -9.732 + 0.1)) (and (x7 > 1.644 - 0.1) (x7 < 1.644 + 0.1)))) ==> @45(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs44
{
	 mode 45;
	 invt:
		 (clock < 45.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @146(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 45.0 - 0.05) (clock < 45.0 + 0.05)) (and (x1 > -9.143 - 0.1) (x1 < -9.143 + 0.1))) (and (and (x4 > -10.092 - 0.1) (x4 < -10.092 + 0.1)) (and (x7 > 1.658 - 0.1) (x7 < 1.658 + 0.1)))) ==> @46(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs45
{
	 mode 46;
	 invt:
		 (clock < 46.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @147(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 46.0 - 0.05) (clock < 46.0 + 0.05)) (and (x1 > -9.056 - 0.1) (x1 < -9.056 + 0.1))) (and (and (x4 > -10.341 - 0.1) (x4 < -10.341 + 0.1)) (and (x7 > 1.681 - 0.1) (x7 < 1.681 + 0.1)))) ==> @47(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs46
{
	 mode 47;
	 invt:
		 (clock < 47.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @148(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 47.0 - 0.05) (clock < 47.0 + 0.05)) (and (x1 > -9.001 - 0.1) (x1 < -9.001 + 0.1))) (and (and (x4 > -10.514 - 0.1) (x4 < -10.514 + 0.1)) (and (x7 > 1.712 - 0.1) (x7 < 1.712 + 0.1)))) ==> @48(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs47
{
	 mode 48;
	 invt:
		 (clock < 48.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @149(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 48.0 - 0.05) (clock < 48.0 + 0.05)) (and (x1 > -8.967 - 0.1) (x1 < -8.967 + 0.1))) (and (and (x4 > -10.631 - 0.1) (x4 < -10.631 + 0.1)) (and (x7 > 1.74 - 0.1) (x7 < 1.74 + 0.1)))) ==> @49(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs48
{
	 mode 49;
	 invt:
		 (clock < 49.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @150(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 49.0 - 0.05) (clock < 49.0 + 0.05)) (and (x1 > -8.946 - 0.1) (x1 < -8.946 + 0.1))) (and (and (x4 > -10.709 - 0.1) (x4 < -10.709 + 0.1)) (and (x7 > 1.761 - 0.1) (x7 < 1.761 + 0.1)))) ==> @50(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs49
{
	 mode 50;
	 invt:
		 (clock < 50.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @151(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 50.0 - 0.05) (clock < 50.0 + 0.05)) (and (x1 > -8.933 - 0.1) (x1 < -8.933 + 0.1))) (and (and (x4 > -10.761 - 0.1) (x4 < -10.761 + 0.1)) (and (x7 > 1.774 - 0.1) (x7 < 1.774 + 0.1)))) ==> @51(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs50
{
	 mode 51;
	 invt:
		 (clock < 51.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @152(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 51.0 - 0.05) (clock < 51.0 + 0.05)) (and (x1 > -8.924 - 0.1) (x1 < -8.924 + 0.1))) (and (and (x4 > -10.795 - 0.1) (x4 < -10.795 + 0.1)) (and (x7 > 1.781 - 0.1) (x7 < 1.781 + 0.1)))) ==> @52(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs51
{
	 mode 52;
	 invt:
		 (clock < 52.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @153(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 52.0 - 0.05) (clock < 52.0 + 0.05)) (and (x1 > -8.919 - 0.1) (x1 < -8.919 + 0.1))) (and (and (x4 > -10.817 - 0.1) (x4 < -10.817 + 0.1)) (and (x7 > 1.785 - 0.1) (x7 < 1.785 + 0.1)))) ==> @53(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs52
{
	 mode 53;
	 invt:
		 (clock < 53.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @154(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 53.0 - 0.05) (clock < 53.0 + 0.05)) (and (x1 > -8.916 - 0.1) (x1 < -8.916 + 0.1))) (and (and (x4 > -10.831 - 0.1) (x4 < -10.831 + 0.1)) (and (x7 > 1.786 - 0.1) (x7 < 1.786 + 0.1)))) ==> @54(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs53
{
	 mode 54;
	 invt:
		 (clock < 54.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @155(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 54.0 - 0.05) (clock < 54.0 + 0.05)) (and (x1 > -8.914 - 0.1) (x1 < -8.914 + 0.1))) (and (and (x4 > -10.84 - 0.1) (x4 < -10.84 + 0.1)) (and (x7 > 1.787 - 0.1) (x7 < 1.787 + 0.1)))) ==> @55(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs54
{
	 mode 55;
	 invt:
		 (clock < 55.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @156(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 55.0 - 0.05) (clock < 55.0 + 0.05)) (and (x1 > -8.913 - 0.1) (x1 < -8.913 + 0.1))) (and (and (x4 > -10.846 - 0.1) (x4 < -10.846 + 0.1)) (and (x7 > 1.787 - 0.1) (x7 < 1.787 + 0.1)))) ==> @56(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs55
{
	 mode 56;
	 invt:
		 (clock < 56.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @157(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 56.0 - 0.05) (clock < 56.0 + 0.05)) (and (x1 > -9.487 - 0.1) (x1 < -9.487 + 0.1))) (and (and (x4 > -9.706 - 0.1) (x4 < -9.706 + 0.1)) (and (x7 > 1.223 - 0.1) (x7 < 1.223 + 0.1)))) ==> @57(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs56
{
	 mode 57;
	 invt:
		 (clock < 57.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @158(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 57.0 - 0.05) (clock < 57.0 + 0.05)) (and (x1 > -10.998 - 0.1) (x1 < -10.998 + 0.1))) (and (and (x4 > -6.475 - 0.1) (x4 < -6.475 + 0.1)) (and (x7 > -0.441 - 0.1) (x7 < -0.441 + 0.1)))) ==> @58(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs57
{
	 mode 58;
	 invt:
		 (clock < 58.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @159(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 58.0 - 0.05) (clock < 58.0 + 0.05)) (and (x1 > -11.961 - 0.1) (x1 < -11.961 + 0.1))) (and (and (x4 > -4.076 - 0.1) (x4 < -4.076 + 0.1)) (and (x7 > -1.717 - 0.1) (x7 < -1.717 + 0.1)))) ==> @59(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs58
{
	 mode 59;
	 invt:
		 (clock < 59.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @160(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 59.0 - 0.05) (clock < 59.0 + 0.05)) (and (x1 > -12.1 - 0.1) (x1 < -12.1 + 0.1))) (and (and (x4 > -3.336 - 0.1) (x4 < -3.336 + 0.1)) (and (x7 > -2.075 - 0.1) (x7 < -2.075 + 0.1)))) ==> @60(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs59
{
	 mode 60;
	 invt:
		 (clock < 60.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @161(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 60.0 - 0.05) (clock < 60.0 + 0.05)) (and (x1 > -11.866 - 0.1) (x1 < -11.866 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.884 - 0.1) (x7 < -1.884 + 0.1)))) ==> @61(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs60
{
	 mode 61;
	 invt:
		 (clock < 61.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @162(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 61.0 - 0.05) (clock < 61.0 + 0.05)) (and (x1 > -11.401 - 0.1) (x1 < -11.401 + 0.1))) (and (and (x4 > -4.522 - 0.1) (x4 < -4.522 + 0.1)) (and (x7 > -1.134 - 0.1) (x7 < -1.134 + 0.1)))) ==> @62(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs61
{
	 mode 62;
	 invt:
		 (clock < 62.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @163(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 62.0 - 0.05) (clock < 62.0 + 0.05)) (and (x1 > -10.617 - 0.1) (x1 < -10.617 + 0.1))) (and (and (x4 > -6.599 - 0.1) (x4 < -6.599 + 0.1)) (and (x7 > 0.267 - 0.1) (x7 < 0.267 + 0.1)))) ==> @63(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs62
{
	 mode 63;
	 invt:
		 (clock < 63.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @164(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 63.0 - 0.05) (clock < 63.0 + 0.05)) (and (x1 > -9.98 - 0.1) (x1 < -9.98 + 0.1))) (and (and (x4 > -8.173 - 0.1) (x4 < -8.173 + 0.1)) (and (x7 > 1.148 - 0.1) (x7 < 1.148 + 0.1)))) ==> @64(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs63
{
	 mode 64;
	 invt:
		 (clock < 64.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @165(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 64.0 - 0.05) (clock < 64.0 + 0.05)) (and (x1 > -9.572 - 0.1) (x1 < -9.572 + 0.1))) (and (and (x4 > -9.092 - 0.1) (x4 < -9.092 + 0.1)) (and (x7 > 1.472 - 0.1) (x7 < 1.472 + 0.1)))) ==> @65(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs64
{
	 mode 65;
	 invt:
		 (clock < 65.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @166(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 65.0 - 0.05) (clock < 65.0 + 0.05)) (and (x1 > -9.321 - 0.1) (x1 < -9.321 + 0.1))) (and (and (x4 > -9.654 - 0.1) (x4 < -9.654 + 0.1)) (and (x7 > 1.566 - 0.1) (x7 < 1.566 + 0.1)))) ==> @66(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs65
{
	 mode 66;
	 invt:
		 (clock < 66.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @167(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 66.0 - 0.05) (clock < 66.0 + 0.05)) (and (x1 > -9.167 - 0.1) (x1 < -9.167 + 0.1))) (and (and (x4 > -10.035 - 0.1) (x4 < -10.035 + 0.1)) (and (x7 > 1.612 - 0.1) (x7 < 1.612 + 0.1)))) ==> @67(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs66
{
	 mode 67;
	 invt:
		 (clock < 67.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @168(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 67.0 - 0.05) (clock < 67.0 + 0.05)) (and (x1 > -9.58 - 0.1) (x1 < -9.58 + 0.1))) (and (and (x4 > -9.269 - 0.1) (x4 < -9.269 + 0.1)) (and (x7 > 1.139 - 0.1) (x7 < 1.139 + 0.1)))) ==> @68(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs67
{
	 mode 68;
	 invt:
		 (clock < 68.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @169(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 68.0 - 0.05) (clock < 68.0 + 0.05)) (and (x1 > -10.942 - 0.1) (x1 < -10.942 + 0.1))) (and (and (x4 > -6.372 - 0.1) (x4 < -6.372 + 0.1)) (and (x7 > -0.427 - 0.1) (x7 < -0.427 + 0.1)))) ==> @69(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs68
{
	 mode 69;
	 invt:
		 (clock < 69.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @170(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 69.0 - 0.05) (clock < 69.0 + 0.05)) (and (x1 > -11.859 - 0.1) (x1 < -11.859 + 0.1))) (and (and (x4 > -4.111 - 0.1) (x4 < -4.111 + 0.1)) (and (x7 > -1.67 - 0.1) (x7 < -1.67 + 0.1)))) ==> @70(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs69
{
	 mode 70;
	 invt:
		 (clock < 70.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @171(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 70.0 - 0.05) (clock < 70.0 + 0.05)) (and (x1 > -12.02 - 0.1) (x1 < -12.02 + 0.1))) (and (and (x4 > -3.375 - 0.1) (x4 < -3.375 + 0.1)) (and (x7 > -2.042 - 0.1) (x7 < -2.042 + 0.1)))) ==> @71(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs70
{
	 mode 71;
	 invt:
		 (clock < 71.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @172(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 71.0 - 0.05) (clock < 71.0 + 0.05)) (and (x1 > -11.82 - 0.1) (x1 < -11.82 + 0.1))) (and (and (x4 > -3.516 - 0.1) (x4 < -3.516 + 0.1)) (and (x7 > -1.875 - 0.1) (x7 < -1.875 + 0.1)))) ==> @72(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs71
{
	 mode 72;
	 invt:
		 (clock < 72.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @173(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 72.0 - 0.05) (clock < 72.0 + 0.05)) (and (x1 > -11.61 - 0.1) (x1 < -11.61 + 0.1))) (and (and (x4 > -3.8 - 0.1) (x4 < -3.8 + 0.1)) (and (x7 > -1.615 - 0.1) (x7 < -1.615 + 0.1)))) ==> @73(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs72
{
	 mode 73;
	 invt:
		 (clock < 73.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @174(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 73.0 - 0.05) (clock < 73.0 + 0.05)) (and (x1 > -11.27 - 0.1) (x1 < -11.27 + 0.1))) (and (and (x4 > -4.643 - 0.1) (x4 < -4.643 + 0.1)) (and (x7 > -0.993 - 0.1) (x7 < -0.993 + 0.1)))) ==> @74(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs73
{
	 mode 74;
	 invt:
		 (clock < 74.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @175(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 74.0 - 0.05) (clock < 74.0 + 0.05)) (and (x1 > -10.553 - 0.1) (x1 < -10.553 + 0.1))) (and (and (x4 > -6.666 - 0.1) (x4 < -6.666 + 0.1)) (and (x7 > 0.357 - 0.1) (x7 < 0.357 + 0.1)))) ==> @75(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs74
{
	 mode 75;
	 invt:
		 (clock < 75.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @176(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 75.0 - 0.05) (clock < 75.0 + 0.05)) (and (x1 > -9.943 - 0.1) (x1 < -9.943 + 0.1))) (and (and (x4 > -8.241 - 0.1) (x4 < -8.241 + 0.1)) (and (x7 > 1.227 - 0.1) (x7 < 1.227 + 0.1)))) ==> @76(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs75
{
	 mode 76;
	 invt:
		 (clock < 76.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @177(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 76.0 - 0.05) (clock < 76.0 + 0.05)) (and (x1 > -9.548 - 0.1) (x1 < -9.548 + 0.1))) (and (and (x4 > -9.153 - 0.1) (x4 < -9.153 + 0.1)) (and (x7 > 1.531 - 0.1) (x7 < 1.531 + 0.1)))) ==> @77(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs76
{
	 mode 77;
	 invt:
		 (clock < 77.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @178(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 77.0 - 0.05) (clock < 77.0 + 0.05)) (and (x1 > -9.306 - 0.1) (x1 < -9.306 + 0.1))) (and (and (x4 > -9.7 - 0.1) (x4 < -9.7 + 0.1)) (and (x7 > 1.601 - 0.1) (x7 < 1.601 + 0.1)))) ==> @78(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs77
{
	 mode 78;
	 invt:
		 (clock < 78.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @179(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 78.0 - 0.05) (clock < 78.0 + 0.05)) (and (x1 > -9.627 - 0.1) (x1 < -9.627 + 0.1))) (and (and (x4 > -9.107 - 0.1) (x4 < -9.107 + 0.1)) (and (x7 > 1.144 - 0.1) (x7 < 1.144 + 0.1)))) ==> @79(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs78
{
	 mode 79;
	 invt:
		 (clock < 79.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @180(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 79.0 - 0.05) (clock < 79.0 + 0.05)) (and (x1 > -10.914 - 0.1) (x1 < -10.914 + 0.1))) (and (and (x4 > -6.353 - 0.1) (x4 < -6.353 + 0.1)) (and (x7 > -0.404 - 0.1) (x7 < -0.404 + 0.1)))) ==> @80(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs79
{
	 mode 80;
	 invt:
		 (clock < 80.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @181(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 80.0 - 0.05) (clock < 80.0 + 0.05)) (and (x1 > -11.814 - 0.1) (x1 < -11.814 + 0.1))) (and (and (x4 > -4.137 - 0.1) (x4 < -4.137 + 0.1)) (and (x7 > -1.651 - 0.1) (x7 < -1.651 + 0.1)))) ==> @81(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs80
{
	 mode 81;
	 invt:
		 (clock < 81.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @182(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 81.0 - 0.05) (clock < 81.0 + 0.05)) (and (x1 > -11.988 - 0.1) (x1 < -11.988 + 0.1))) (and (and (x4 > -3.393 - 0.1) (x4 < -3.393 + 0.1)) (and (x7 > -2.036 - 0.1) (x7 < -2.036 + 0.1)))) ==> @82(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs81
{
	 mode 82;
	 invt:
		 (clock < 82.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @183(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 82.0 - 0.05) (clock < 82.0 + 0.05)) (and (x1 > -11.803 - 0.1) (x1 < -11.803 + 0.1))) (and (and (x4 > -3.518 - 0.1) (x4 < -3.518 + 0.1)) (and (x7 > -1.877 - 0.1) (x7 < -1.877 + 0.1)))) ==> @83(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs82
{
	 mode 83;
	 invt:
		 (clock < 83.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @184(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 83.0 - 0.05) (clock < 83.0 + 0.05)) (and (x1 > -11.603 - 0.1) (x1 < -11.603 + 0.1))) (and (and (x4 > -3.794 - 0.1) (x4 < -3.794 + 0.1)) (and (x7 > -1.619 - 0.1) (x7 < -1.619 + 0.1)))) ==> @84(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs83
{
	 mode 84;
	 invt:
		 (clock < 84.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @185(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 84.0 - 0.05) (clock < 84.0 + 0.05)) (and (x1 > -11.499 - 0.1) (x1 < -11.499 + 0.1))) (and (and (x4 > -3.922 - 0.1) (x4 < -3.922 + 0.1)) (and (x7 > -1.478 - 0.1) (x7 < -1.478 + 0.1)))) ==> @85(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs84
{
	 mode 85;
	 invt:
		 (clock < 85.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @186(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 85.0 - 0.05) (clock < 85.0 + 0.05)) (and (x1 > -11.467 - 0.1) (x1 < -11.467 + 0.1))) (and (and (x4 > -3.913 - 0.1) (x4 < -3.913 + 0.1)) (and (x7 > -1.459 - 0.1) (x7 < -1.459 + 0.1)))) ==> @86(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs85
{
	 mode 86;
	 invt:
		 (clock < 86.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @187(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 86.0 - 0.05) (clock < 86.0 + 0.05)) (and (x1 > -11.456 - 0.1) (x1 < -11.456 + 0.1))) (and (and (x4 > -3.862 - 0.1) (x4 < -3.862 + 0.1)) (and (x7 > -1.491 - 0.1) (x7 < -1.491 + 0.1)))) ==> @87(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs86
{
	 mode 87;
	 invt:
		 (clock < 87.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @188(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 87.0 - 0.05) (clock < 87.0 + 0.05)) (and (x1 > -11.445 - 0.1) (x1 < -11.445 + 0.1))) (and (and (x4 > -3.826 - 0.1) (x4 < -3.826 + 0.1)) (and (x7 > -1.52 - 0.1) (x7 < -1.52 + 0.1)))) ==> @88(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs87
{
	 mode 88;
	 invt:
		 (clock < 88.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @189(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 88.0 - 0.05) (clock < 88.0 + 0.05)) (and (x1 > -11.43 - 0.1) (x1 < -11.43 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.529 - 0.1) (x7 < -1.529 + 0.1)))) ==> @89(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs88
{
	 mode 89;
	 invt:
		 (clock < 89.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @190(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 89.0 - 0.05) (clock < 89.0 + 0.05)) (and (x1 > -11.417 - 0.1) (x1 < -11.417 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.526 - 0.1) (x7 < -1.526 + 0.1)))) ==> @90(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs89
{
	 mode 90;
	 invt:
		 (clock < 90.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @191(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 90.0 - 0.05) (clock < 90.0 + 0.05)) (and (x1 > -11.408 - 0.1) (x1 < -11.408 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.519 - 0.1) (x7 < -1.519 + 0.1)))) ==> @91(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs90
{
	 mode 91;
	 invt:
		 (clock < 91.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @192(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 91.0 - 0.05) (clock < 91.0 + 0.05)) (and (x1 > -11.182 - 0.1) (x1 < -11.182 + 0.1))) (and (and (x4 > -4.52 - 0.1) (x4 < -4.52 + 0.1)) (and (x7 > -1.033 - 0.1) (x7 < -1.033 + 0.1)))) ==> @92(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs91
{
	 mode 92;
	 invt:
		 (clock < 92.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @193(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 92.0 - 0.05) (clock < 92.0 + 0.05)) (and (x1 > -10.509 - 0.1) (x1 < -10.509 + 0.1))) (and (and (x4 > -6.574 - 0.1) (x4 < -6.574 + 0.1)) (and (x7 > 0.34 - 0.1) (x7 < 0.34 + 0.1)))) ==> @93(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs92
{
	 mode 93;
	 invt:
		 (clock < 93.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @194(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 93.0 - 0.05) (clock < 93.0 + 0.05)) (and (x1 > -9.916 - 0.1) (x1 < -9.916 + 0.1))) (and (and (x4 > -8.207 - 0.1) (x4 < -8.207 + 0.1)) (and (x7 > 1.257 - 0.1) (x7 < 1.257 + 0.1)))) ==> @94(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs93
{
	 mode 94;
	 invt:
		 (clock < 94.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @195(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 94.0 - 0.05) (clock < 94.0 + 0.05)) (and (x1 > -9.531 - 0.1) (x1 < -9.531 + 0.1))) (and (and (x4 > -9.148 - 0.1) (x4 < -9.148 + 0.1)) (and (x7 > 1.576 - 0.1) (x7 < 1.576 + 0.1)))) ==> @95(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs94
{
	 mode 95;
	 invt:
		 (clock < 95.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @196(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 95.0 - 0.05) (clock < 95.0 + 0.05)) (and (x1 > -9.296 - 0.1) (x1 < -9.296 + 0.1))) (and (and (x4 > -9.704 - 0.1) (x4 < -9.704 + 0.1)) (and (x7 > 1.639 - 0.1) (x7 < 1.639 + 0.1)))) ==> @96(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs95
{
	 mode 96;
	 invt:
		 (clock < 96.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @197(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 96.0 - 0.05) (clock < 96.0 + 0.05)) (and (x1 > -9.151 - 0.1) (x1 < -9.151 + 0.1))) (and (and (x4 > -10.072 - 0.1) (x4 < -10.072 + 0.1)) (and (x7 > 1.655 - 0.1) (x7 < 1.655 + 0.1)))) ==> @97(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs96
{
	 mode 97;
	 invt:
		 (clock < 97.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @198(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 97.0 - 0.05) (clock < 97.0 + 0.05)) (and (x1 > -9.06 - 0.1) (x1 < -9.06 + 0.1))) (and (and (x4 > -10.328 - 0.1) (x4 < -10.328 + 0.1)) (and (x7 > 1.678 - 0.1) (x7 < 1.678 + 0.1)))) ==> @98(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs97
{
	 mode 98;
	 invt:
		 (clock < 98.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @199(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 98.0 - 0.05) (clock < 98.0 + 0.05)) (and (x1 > -9.004 - 0.1) (x1 < -9.004 + 0.1))) (and (and (x4 > -10.504 - 0.1) (x4 < -10.504 + 0.1)) (and (x7 > 1.709 - 0.1) (x7 < 1.709 + 0.1)))) ==> @99(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs98
{
	 mode 99;
	 invt:
		 (clock < 99.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @200(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 99.0 - 0.05) (clock < 99.0 + 0.05)) (and (x1 > -8.969 - 0.1) (x1 < -8.969 + 0.1))) (and (and (x4 > -10.624 - 0.1) (x4 < -10.624 + 0.1)) (and (x7 > 1.738 - 0.1) (x7 < 1.738 + 0.1)))) ==> @100(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs99
{
	 mode 100;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @201(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 100.0 - 0.05) (clock < 100.0 + 0.05)) (and (x1 > -8.947 - 0.1) (x1 < -8.947 + 0.1))) (and (and (x4 > -10.705 - 0.1) (x4 < -10.705 + 0.1)) (and (x7 > 1.76 - 0.1) (x7 < 1.76 + 0.1)))) ==> @101(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs100
{
	 mode 101;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @202(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs0
{
	 mode 102;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @103(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs1
{
	 mode 103;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @104(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs2
{
	 mode 104;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @105(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs3
{
	 mode 105;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @106(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs4
{
	 mode 106;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @107(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs5
{
	 mode 107;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.214 - 0.1) (x1 < -9.214 + 0.1))) (and (and (x4 > -3.036 - 0.1) (x4 < -3.036 + 0.1)) (and (x7 > -1.221 - 0.1) (x7 < -1.221 + 0.1)))) ==> @108(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs6
{
	 mode 108;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.807 - 0.1) (x1 < -9.807 + 0.1))) (and (and (x4 > -3.251 - 0.1) (x4 < -3.251 + 0.1)) (and (x7 > -1.316 - 0.1) (x7 < -1.316 + 0.1)))) ==> @109(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs7
{
	 mode 109;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -10.249 - 0.1) (x1 < -10.249 + 0.1))) (and (and (x4 > -3.4 - 0.1) (x4 < -3.4 + 0.1)) (and (x7 > -1.366 - 0.1) (x7 < -1.366 + 0.1)))) ==> @110(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs8
{
	 mode 110;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -10.568 - 0.1) (x1 < -10.568 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.397 - 0.1) (x7 < -1.397 + 0.1)))) ==> @111(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs9
{
	 mode 111;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -10.796 - 0.1) (x1 < -10.796 + 0.1))) (and (and (x4 > -3.591 - 0.1) (x4 < -3.591 + 0.1)) (and (x7 > -1.423 - 0.1) (x7 < -1.423 + 0.1)))) ==> @112(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs10
{
	 mode 112;
	 invt:
		 (clock < 11.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x1 > -10.959 - 0.1) (x1 < -10.959 + 0.1))) (and (and (x4 > -3.651 - 0.1) (x4 < -3.651 + 0.1)) (and (x7 > -1.446 - 0.1) (x7 < -1.446 + 0.1)))) ==> @113(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs11
{
	 mode 113;
	 invt:
		 (clock < 12.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x1 > -11.077 - 0.1) (x1 < -11.077 + 0.1))) (and (and (x4 > -3.695 - 0.1) (x4 < -3.695 + 0.1)) (and (x7 > -1.465 - 0.1) (x7 < -1.465 + 0.1)))) ==> @114(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs12
{
	 mode 114;
	 invt:
		 (clock < 13.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x1 > -11.162 - 0.1) (x1 < -11.162 + 0.1))) (and (and (x4 > -3.727 - 0.1) (x4 < -3.727 + 0.1)) (and (x7 > -1.48 - 0.1) (x7 < -1.48 + 0.1)))) ==> @115(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs13
{
	 mode 115;
	 invt:
		 (clock < 14.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x1 > -11.224 - 0.1) (x1 < -11.224 + 0.1))) (and (and (x4 > -3.751 - 0.1) (x4 < -3.751 + 0.1)) (and (x7 > -1.49 - 0.1) (x7 < -1.49 + 0.1)))) ==> @116(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs14
{
	 mode 116;
	 invt:
		 (clock < 15.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x1 > -11.269 - 0.1) (x1 < -11.269 + 0.1))) (and (and (x4 > -3.768 - 0.1) (x4 < -3.768 + 0.1)) (and (x7 > -1.496 - 0.1) (x7 < -1.496 + 0.1)))) ==> @117(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs15
{
	 mode 117;
	 invt:
		 (clock < 16.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x1 > -11.04 - 0.1) (x1 < -11.04 + 0.1))) (and (and (x4 > -4.624 - 0.1) (x4 < -4.624 + 0.1)) (and (x7 > -0.916 - 0.1) (x7 < -0.916 + 0.1)))) ==> @118(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs16
{
	 mode 118;
	 invt:
		 (clock < 17.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x1 > -10.392 - 0.1) (x1 < -10.392 + 0.1))) (and (and (x4 > -6.713 - 0.1) (x4 < -6.713 + 0.1)) (and (x7 > 0.468 - 0.1) (x7 < 0.468 + 0.1)))) ==> @119(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs17
{
	 mode 119;
	 invt:
		 (clock < 18.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x1 > -9.839 - 0.1) (x1 < -9.839 + 0.1))) (and (and (x4 > -8.302 - 0.1) (x4 < -8.302 + 0.1)) (and (x7 > 1.339 - 0.1) (x7 < 1.339 + 0.1)))) ==> @120(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs18
{
	 mode 120;
	 invt:
		 (clock < 19.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x1 > -9.484 - 0.1) (x1 < -9.484 + 0.1))) (and (and (x4 > -9.212 - 0.1) (x4 < -9.212 + 0.1)) (and (x7 > 1.626 - 0.1) (x7 < 1.626 + 0.1)))) ==> @121(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs19
{
	 mode 121;
	 invt:
		 (clock < 20.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x1 > -9.266 - 0.1) (x1 < -9.266 + 0.1))) (and (and (x4 > -9.752 - 0.1) (x4 < -9.752 + 0.1)) (and (x7 > 1.674 - 0.1) (x7 < 1.674 + 0.1)))) ==> @122(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs20
{
	 mode 122;
	 invt:
		 (clock < 21.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 21.0 - 0.05) (clock < 21.0 + 0.05)) (and (x1 > -9.673 - 0.1) (x1 < -9.673 + 0.1))) (and (and (x4 > -8.999 - 0.1) (x4 < -8.999 + 0.1)) (and (x7 > 1.113 - 0.1) (x7 < 1.113 + 0.1)))) ==> @123(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs21
{
	 mode 123;
	 invt:
		 (clock < 22.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 22.0 - 0.05) (clock < 22.0 + 0.05)) (and (x1 > -10.978 - 0.1) (x1 < -10.978 + 0.1))) (and (and (x4 > -6.188 - 0.1) (x4 < -6.188 + 0.1)) (and (x7 > -0.487 - 0.1) (x7 < -0.487 + 0.1)))) ==> @124(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs22
{
	 mode 124;
	 invt:
		 (clock < 23.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @23(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 23.0 - 0.05) (clock < 23.0 + 0.05)) (and (x1 > -11.837 - 0.1) (x1 < -11.837 + 0.1))) (and (and (x4 > -4.048 - 0.1) (x4 < -4.048 + 0.1)) (and (x7 > -1.703 - 0.1) (x7 < -1.703 + 0.1)))) ==> @125(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs23
{
	 mode 125;
	 invt:
		 (clock < 24.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @24(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 24.0 - 0.05) (clock < 24.0 + 0.05)) (and (x1 > -11.978 - 0.1) (x1 < -11.978 + 0.1))) (and (and (x4 > -3.379 - 0.1) (x4 < -3.379 + 0.1)) (and (x7 > -2.045 - 0.1) (x7 < -2.045 + 0.1)))) ==> @126(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs24
{
	 mode 126;
	 invt:
		 (clock < 25.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @25(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 25.0 - 0.05) (clock < 25.0 + 0.05)) (and (x1 > -11.786 - 0.1) (x1 < -11.786 + 0.1))) (and (and (x4 > -3.533 - 0.1) (x4 < -3.533 + 0.1)) (and (x7 > -1.864 - 0.1) (x7 < -1.864 + 0.1)))) ==> @127(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs25
{
	 mode 127;
	 invt:
		 (clock < 26.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @26(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 26.0 - 0.05) (clock < 26.0 + 0.05)) (and (x1 > -11.591 - 0.1) (x1 < -11.591 + 0.1))) (and (and (x4 > -3.807 - 0.1) (x4 < -3.807 + 0.1)) (and (x7 > -1.606 - 0.1) (x7 < -1.606 + 0.1)))) ==> @128(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs26
{
	 mode 128;
	 invt:
		 (clock < 27.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @27(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 27.0 - 0.05) (clock < 27.0 + 0.05)) (and (x1 > -11.494 - 0.1) (x1 < -11.494 + 0.1))) (and (and (x4 > -3.925 - 0.1) (x4 < -3.925 + 0.1)) (and (x7 > -1.473 - 0.1) (x7 < -1.473 + 0.1)))) ==> @129(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs27
{
	 mode 129;
	 invt:
		 (clock < 28.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @28(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 28.0 - 0.05) (clock < 28.0 + 0.05)) (and (x1 > -11.465 - 0.1) (x1 < -11.465 + 0.1))) (and (and (x4 > -3.911 - 0.1) (x4 < -3.911 + 0.1)) (and (x7 > -1.459 - 0.1) (x7 < -1.459 + 0.1)))) ==> @130(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs28
{
	 mode 130;
	 invt:
		 (clock < 29.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @29(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 29.0 - 0.05) (clock < 29.0 + 0.05)) (and (x1 > -11.455 - 0.1) (x1 < -11.455 + 0.1))) (and (and (x4 > -3.859 - 0.1) (x4 < -3.859 + 0.1)) (and (x7 > -1.493 - 0.1) (x7 < -1.493 + 0.1)))) ==> @131(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs29
{
	 mode 131;
	 invt:
		 (clock < 30.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @30(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 30.0 - 0.05) (clock < 30.0 + 0.05)) (and (x1 > -11.443 - 0.1) (x1 < -11.443 + 0.1))) (and (and (x4 > -3.825 - 0.1) (x4 < -3.825 + 0.1)) (and (x7 > -1.521 - 0.1) (x7 < -1.521 + 0.1)))) ==> @132(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs30
{
	 mode 132;
	 invt:
		 (clock < 31.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @31(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 31.0 - 0.05) (clock < 31.0 + 0.05)) (and (x1 > -11.429 - 0.1) (x1 < -11.429 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.529 - 0.1) (x7 < -1.529 + 0.1)))) ==> @133(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs31
{
	 mode 133;
	 invt:
		 (clock < 32.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @32(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 32.0 - 0.05) (clock < 32.0 + 0.05)) (and (x1 > -11.416 - 0.1) (x1 < -11.416 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.526 - 0.1) (x7 < -1.526 + 0.1)))) ==> @134(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs32
{
	 mode 134;
	 invt:
		 (clock < 33.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @33(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 33.0 - 0.05) (clock < 33.0 + 0.05)) (and (x1 > -11.407 - 0.1) (x1 < -11.407 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.519 - 0.1) (x7 < -1.519 + 0.1)))) ==> @135(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs33
{
	 mode 135;
	 invt:
		 (clock < 34.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @34(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 34.0 - 0.05) (clock < 34.0 + 0.05)) (and (x1 > -11.402 - 0.1) (x1 < -11.402 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.515 - 0.1) (x7 < -1.515 + 0.1)))) ==> @136(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs34
{
	 mode 136;
	 invt:
		 (clock < 35.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @35(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 35.0 - 0.05) (clock < 35.0 + 0.05)) (and (x1 > -11.399 - 0.1) (x1 < -11.399 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @137(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs35
{
	 mode 137;
	 invt:
		 (clock < 36.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @36(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 36.0 - 0.05) (clock < 36.0 + 0.05)) (and (x1 > -11.396 - 0.1) (x1 < -11.396 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @138(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs36
{
	 mode 138;
	 invt:
		 (clock < 37.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @37(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 37.0 - 0.05) (clock < 37.0 + 0.05)) (and (x1 > -11.394 - 0.1) (x1 < -11.394 + 0.1))) (and (and (x4 > -3.814 - 0.1) (x4 < -3.814 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @139(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs37
{
	 mode 139;
	 invt:
		 (clock < 38.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @38(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 38.0 - 0.05) (clock < 38.0 + 0.05)) (and (x1 > -11.393 - 0.1) (x1 < -11.393 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @140(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs38
{
	 mode 140;
	 invt:
		 (clock < 39.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @39(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 39.0 - 0.05) (clock < 39.0 + 0.05)) (and (x1 > -11.392 - 0.1) (x1 < -11.392 + 0.1))) (and (and (x4 > -3.813 - 0.1) (x4 < -3.813 + 0.1)) (and (x7 > -1.514 - 0.1) (x7 < -1.514 + 0.1)))) ==> @141(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs39
{
	 mode 141;
	 invt:
		 (clock < 40.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @40(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 40.0 - 0.05) (clock < 40.0 + 0.05)) (and (x1 > -11.137 - 0.1) (x1 < -11.137 + 0.1))) (and (and (x4 > -4.619 - 0.1) (x4 < -4.619 + 0.1)) (and (x7 > -0.958 - 0.1) (x7 < -0.958 + 0.1)))) ==> @142(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs40
{
	 mode 142;
	 invt:
		 (clock < 41.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @41(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 41.0 - 0.05) (clock < 41.0 + 0.05)) (and (x1 > -10.461 - 0.1) (x1 < -10.461 + 0.1))) (and (and (x4 > -6.69 - 0.1) (x4 < -6.69 + 0.1)) (and (x7 > 0.417 - 0.1) (x7 < 0.417 + 0.1)))) ==> @143(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs41
{
	 mode 143;
	 invt:
		 (clock < 42.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @42(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 42.0 - 0.05) (clock < 42.0 + 0.05)) (and (x1 > -9.883 - 0.1) (x1 < -9.883 + 0.1))) (and (and (x4 > -8.279 - 0.1) (x4 < -8.279 + 0.1)) (and (x7 > 1.293 - 0.1) (x7 < 1.293 + 0.1)))) ==> @144(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs42
{
	 mode 144;
	 invt:
		 (clock < 43.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @43(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 43.0 - 0.05) (clock < 43.0 + 0.05)) (and (x1 > -9.511 - 0.1) (x1 < -9.511 + 0.1))) (and (and (x4 > -9.19 - 0.1) (x4 < -9.19 + 0.1)) (and (x7 > 1.588 - 0.1) (x7 < 1.588 + 0.1)))) ==> @145(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs43
{
	 mode 145;
	 invt:
		 (clock < 44.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @44(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 44.0 - 0.05) (clock < 44.0 + 0.05)) (and (x1 > -9.283 - 0.1) (x1 < -9.283 + 0.1))) (and (and (x4 > -9.732 - 0.1) (x4 < -9.732 + 0.1)) (and (x7 > 1.644 - 0.1) (x7 < 1.644 + 0.1)))) ==> @146(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs44
{
	 mode 146;
	 invt:
		 (clock < 45.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @45(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 45.0 - 0.05) (clock < 45.0 + 0.05)) (and (x1 > -9.143 - 0.1) (x1 < -9.143 + 0.1))) (and (and (x4 > -10.092 - 0.1) (x4 < -10.092 + 0.1)) (and (x7 > 1.658 - 0.1) (x7 < 1.658 + 0.1)))) ==> @147(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs45
{
	 mode 147;
	 invt:
		 (clock < 46.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @46(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 46.0 - 0.05) (clock < 46.0 + 0.05)) (and (x1 > -9.056 - 0.1) (x1 < -9.056 + 0.1))) (and (and (x4 > -10.341 - 0.1) (x4 < -10.341 + 0.1)) (and (x7 > 1.681 - 0.1) (x7 < 1.681 + 0.1)))) ==> @148(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs46
{
	 mode 148;
	 invt:
		 (clock < 47.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @47(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 47.0 - 0.05) (clock < 47.0 + 0.05)) (and (x1 > -9.001 - 0.1) (x1 < -9.001 + 0.1))) (and (and (x4 > -10.514 - 0.1) (x4 < -10.514 + 0.1)) (and (x7 > 1.712 - 0.1) (x7 < 1.712 + 0.1)))) ==> @149(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs47
{
	 mode 149;
	 invt:
		 (clock < 48.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @48(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 48.0 - 0.05) (clock < 48.0 + 0.05)) (and (x1 > -8.967 - 0.1) (x1 < -8.967 + 0.1))) (and (and (x4 > -10.631 - 0.1) (x4 < -10.631 + 0.1)) (and (x7 > 1.74 - 0.1) (x7 < 1.74 + 0.1)))) ==> @150(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs48
{
	 mode 150;
	 invt:
		 (clock < 49.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @49(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 49.0 - 0.05) (clock < 49.0 + 0.05)) (and (x1 > -8.946 - 0.1) (x1 < -8.946 + 0.1))) (and (and (x4 > -10.709 - 0.1) (x4 < -10.709 + 0.1)) (and (x7 > 1.761 - 0.1) (x7 < 1.761 + 0.1)))) ==> @151(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs49
{
	 mode 151;
	 invt:
		 (clock < 50.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @50(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 50.0 - 0.05) (clock < 50.0 + 0.05)) (and (x1 > -8.933 - 0.1) (x1 < -8.933 + 0.1))) (and (and (x4 > -10.761 - 0.1) (x4 < -10.761 + 0.1)) (and (x7 > 1.774 - 0.1) (x7 < 1.774 + 0.1)))) ==> @152(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs50
{
	 mode 152;
	 invt:
		 (clock < 51.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @51(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 51.0 - 0.05) (clock < 51.0 + 0.05)) (and (x1 > -8.924 - 0.1) (x1 < -8.924 + 0.1))) (and (and (x4 > -10.795 - 0.1) (x4 < -10.795 + 0.1)) (and (x7 > 1.781 - 0.1) (x7 < 1.781 + 0.1)))) ==> @153(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs51
{
	 mode 153;
	 invt:
		 (clock < 52.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @52(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 52.0 - 0.05) (clock < 52.0 + 0.05)) (and (x1 > -8.919 - 0.1) (x1 < -8.919 + 0.1))) (and (and (x4 > -10.817 - 0.1) (x4 < -10.817 + 0.1)) (and (x7 > 1.785 - 0.1) (x7 < 1.785 + 0.1)))) ==> @154(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs52
{
	 mode 154;
	 invt:
		 (clock < 53.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @53(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 53.0 - 0.05) (clock < 53.0 + 0.05)) (and (x1 > -8.916 - 0.1) (x1 < -8.916 + 0.1))) (and (and (x4 > -10.831 - 0.1) (x4 < -10.831 + 0.1)) (and (x7 > 1.786 - 0.1) (x7 < 1.786 + 0.1)))) ==> @155(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs53
{
	 mode 155;
	 invt:
		 (clock < 54.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @54(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 54.0 - 0.05) (clock < 54.0 + 0.05)) (and (x1 > -8.914 - 0.1) (x1 < -8.914 + 0.1))) (and (and (x4 > -10.84 - 0.1) (x4 < -10.84 + 0.1)) (and (x7 > 1.787 - 0.1) (x7 < 1.787 + 0.1)))) ==> @156(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs54
{
	 mode 156;
	 invt:
		 (clock < 55.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @55(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 55.0 - 0.05) (clock < 55.0 + 0.05)) (and (x1 > -8.913 - 0.1) (x1 < -8.913 + 0.1))) (and (and (x4 > -10.846 - 0.1) (x4 < -10.846 + 0.1)) (and (x7 > 1.787 - 0.1) (x7 < 1.787 + 0.1)))) ==> @157(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs55
{
	 mode 157;
	 invt:
		 (clock < 56.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @56(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 56.0 - 0.05) (clock < 56.0 + 0.05)) (and (x1 > -9.487 - 0.1) (x1 < -9.487 + 0.1))) (and (and (x4 > -9.706 - 0.1) (x4 < -9.706 + 0.1)) (and (x7 > 1.223 - 0.1) (x7 < 1.223 + 0.1)))) ==> @158(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs56
{
	 mode 158;
	 invt:
		 (clock < 57.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @57(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 57.0 - 0.05) (clock < 57.0 + 0.05)) (and (x1 > -10.998 - 0.1) (x1 < -10.998 + 0.1))) (and (and (x4 > -6.475 - 0.1) (x4 < -6.475 + 0.1)) (and (x7 > -0.441 - 0.1) (x7 < -0.441 + 0.1)))) ==> @159(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs57
{
	 mode 159;
	 invt:
		 (clock < 58.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @58(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 58.0 - 0.05) (clock < 58.0 + 0.05)) (and (x1 > -11.961 - 0.1) (x1 < -11.961 + 0.1))) (and (and (x4 > -4.076 - 0.1) (x4 < -4.076 + 0.1)) (and (x7 > -1.717 - 0.1) (x7 < -1.717 + 0.1)))) ==> @160(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs58
{
	 mode 160;
	 invt:
		 (clock < 59.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @59(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 59.0 - 0.05) (clock < 59.0 + 0.05)) (and (x1 > -12.1 - 0.1) (x1 < -12.1 + 0.1))) (and (and (x4 > -3.336 - 0.1) (x4 < -3.336 + 0.1)) (and (x7 > -2.075 - 0.1) (x7 < -2.075 + 0.1)))) ==> @161(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs59
{
	 mode 161;
	 invt:
		 (clock < 60.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @60(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 60.0 - 0.05) (clock < 60.0 + 0.05)) (and (x1 > -11.866 - 0.1) (x1 < -11.866 + 0.1))) (and (and (x4 > -3.509 - 0.1) (x4 < -3.509 + 0.1)) (and (x7 > -1.884 - 0.1) (x7 < -1.884 + 0.1)))) ==> @162(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs60
{
	 mode 162;
	 invt:
		 (clock < 61.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @61(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 61.0 - 0.05) (clock < 61.0 + 0.05)) (and (x1 > -11.401 - 0.1) (x1 < -11.401 + 0.1))) (and (and (x4 > -4.522 - 0.1) (x4 < -4.522 + 0.1)) (and (x7 > -1.134 - 0.1) (x7 < -1.134 + 0.1)))) ==> @163(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs61
{
	 mode 163;
	 invt:
		 (clock < 62.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @62(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 62.0 - 0.05) (clock < 62.0 + 0.05)) (and (x1 > -10.617 - 0.1) (x1 < -10.617 + 0.1))) (and (and (x4 > -6.599 - 0.1) (x4 < -6.599 + 0.1)) (and (x7 > 0.267 - 0.1) (x7 < 0.267 + 0.1)))) ==> @164(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs62
{
	 mode 164;
	 invt:
		 (clock < 63.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @63(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 63.0 - 0.05) (clock < 63.0 + 0.05)) (and (x1 > -9.98 - 0.1) (x1 < -9.98 + 0.1))) (and (and (x4 > -8.173 - 0.1) (x4 < -8.173 + 0.1)) (and (x7 > 1.148 - 0.1) (x7 < 1.148 + 0.1)))) ==> @165(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs63
{
	 mode 165;
	 invt:
		 (clock < 64.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @64(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 64.0 - 0.05) (clock < 64.0 + 0.05)) (and (x1 > -9.572 - 0.1) (x1 < -9.572 + 0.1))) (and (and (x4 > -9.092 - 0.1) (x4 < -9.092 + 0.1)) (and (x7 > 1.472 - 0.1) (x7 < 1.472 + 0.1)))) ==> @166(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs64
{
	 mode 166;
	 invt:
		 (clock < 65.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @65(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 65.0 - 0.05) (clock < 65.0 + 0.05)) (and (x1 > -9.321 - 0.1) (x1 < -9.321 + 0.1))) (and (and (x4 > -9.654 - 0.1) (x4 < -9.654 + 0.1)) (and (x7 > 1.566 - 0.1) (x7 < 1.566 + 0.1)))) ==> @167(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs65
{
	 mode 167;
	 invt:
		 (clock < 66.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @66(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 66.0 - 0.05) (clock < 66.0 + 0.05)) (and (x1 > -9.167 - 0.1) (x1 < -9.167 + 0.1))) (and (and (x4 > -10.035 - 0.1) (x4 < -10.035 + 0.1)) (and (x7 > 1.612 - 0.1) (x7 < 1.612 + 0.1)))) ==> @168(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs66
{
	 mode 168;
	 invt:
		 (clock < 67.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @67(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 67.0 - 0.05) (clock < 67.0 + 0.05)) (and (x1 > -9.58 - 0.1) (x1 < -9.58 + 0.1))) (and (and (x4 > -9.269 - 0.1) (x4 < -9.269 + 0.1)) (and (x7 > 1.139 - 0.1) (x7 < 1.139 + 0.1)))) ==> @169(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs67
{
	 mode 169;
	 invt:
		 (clock < 68.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @68(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 68.0 - 0.05) (clock < 68.0 + 0.05)) (and (x1 > -10.942 - 0.1) (x1 < -10.942 + 0.1))) (and (and (x4 > -6.372 - 0.1) (x4 < -6.372 + 0.1)) (and (x7 > -0.427 - 0.1) (x7 < -0.427 + 0.1)))) ==> @170(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs68
{
	 mode 170;
	 invt:
		 (clock < 69.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @69(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 69.0 - 0.05) (clock < 69.0 + 0.05)) (and (x1 > -11.859 - 0.1) (x1 < -11.859 + 0.1))) (and (and (x4 > -4.111 - 0.1) (x4 < -4.111 + 0.1)) (and (x7 > -1.67 - 0.1) (x7 < -1.67 + 0.1)))) ==> @171(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs69
{
	 mode 171;
	 invt:
		 (clock < 70.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @70(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 70.0 - 0.05) (clock < 70.0 + 0.05)) (and (x1 > -12.02 - 0.1) (x1 < -12.02 + 0.1))) (and (and (x4 > -3.375 - 0.1) (x4 < -3.375 + 0.1)) (and (x7 > -2.042 - 0.1) (x7 < -2.042 + 0.1)))) ==> @172(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs70
{
	 mode 172;
	 invt:
		 (clock < 71.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @71(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 71.0 - 0.05) (clock < 71.0 + 0.05)) (and (x1 > -11.82 - 0.1) (x1 < -11.82 + 0.1))) (and (and (x4 > -3.516 - 0.1) (x4 < -3.516 + 0.1)) (and (x7 > -1.875 - 0.1) (x7 < -1.875 + 0.1)))) ==> @173(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs71
{
	 mode 173;
	 invt:
		 (clock < 72.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @72(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 72.0 - 0.05) (clock < 72.0 + 0.05)) (and (x1 > -11.61 - 0.1) (x1 < -11.61 + 0.1))) (and (and (x4 > -3.8 - 0.1) (x4 < -3.8 + 0.1)) (and (x7 > -1.615 - 0.1) (x7 < -1.615 + 0.1)))) ==> @174(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs72
{
	 mode 174;
	 invt:
		 (clock < 73.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @73(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 73.0 - 0.05) (clock < 73.0 + 0.05)) (and (x1 > -11.27 - 0.1) (x1 < -11.27 + 0.1))) (and (and (x4 > -4.643 - 0.1) (x4 < -4.643 + 0.1)) (and (x7 > -0.993 - 0.1) (x7 < -0.993 + 0.1)))) ==> @175(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs73
{
	 mode 175;
	 invt:
		 (clock < 74.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @74(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 74.0 - 0.05) (clock < 74.0 + 0.05)) (and (x1 > -10.553 - 0.1) (x1 < -10.553 + 0.1))) (and (and (x4 > -6.666 - 0.1) (x4 < -6.666 + 0.1)) (and (x7 > 0.357 - 0.1) (x7 < 0.357 + 0.1)))) ==> @176(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs74
{
	 mode 176;
	 invt:
		 (clock < 75.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @75(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 75.0 - 0.05) (clock < 75.0 + 0.05)) (and (x1 > -9.943 - 0.1) (x1 < -9.943 + 0.1))) (and (and (x4 > -8.241 - 0.1) (x4 < -8.241 + 0.1)) (and (x7 > 1.227 - 0.1) (x7 < 1.227 + 0.1)))) ==> @177(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs75
{
	 mode 177;
	 invt:
		 (clock < 76.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @76(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 76.0 - 0.05) (clock < 76.0 + 0.05)) (and (x1 > -9.548 - 0.1) (x1 < -9.548 + 0.1))) (and (and (x4 > -9.153 - 0.1) (x4 < -9.153 + 0.1)) (and (x7 > 1.531 - 0.1) (x7 < 1.531 + 0.1)))) ==> @178(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs76
{
	 mode 178;
	 invt:
		 (clock < 77.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @77(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 77.0 - 0.05) (clock < 77.0 + 0.05)) (and (x1 > -9.306 - 0.1) (x1 < -9.306 + 0.1))) (and (and (x4 > -9.7 - 0.1) (x4 < -9.7 + 0.1)) (and (x7 > 1.601 - 0.1) (x7 < 1.601 + 0.1)))) ==> @179(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs77
{
	 mode 179;
	 invt:
		 (clock < 78.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @78(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 78.0 - 0.05) (clock < 78.0 + 0.05)) (and (x1 > -9.627 - 0.1) (x1 < -9.627 + 0.1))) (and (and (x4 > -9.107 - 0.1) (x4 < -9.107 + 0.1)) (and (x7 > 1.144 - 0.1) (x7 < 1.144 + 0.1)))) ==> @180(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs78
{
	 mode 180;
	 invt:
		 (clock < 79.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @79(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 79.0 - 0.05) (clock < 79.0 + 0.05)) (and (x1 > -10.914 - 0.1) (x1 < -10.914 + 0.1))) (and (and (x4 > -6.353 - 0.1) (x4 < -6.353 + 0.1)) (and (x7 > -0.404 - 0.1) (x7 < -0.404 + 0.1)))) ==> @181(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs79
{
	 mode 181;
	 invt:
		 (clock < 80.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @80(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 80.0 - 0.05) (clock < 80.0 + 0.05)) (and (x1 > -11.814 - 0.1) (x1 < -11.814 + 0.1))) (and (and (x4 > -4.137 - 0.1) (x4 < -4.137 + 0.1)) (and (x7 > -1.651 - 0.1) (x7 < -1.651 + 0.1)))) ==> @182(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs80
{
	 mode 182;
	 invt:
		 (clock < 81.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @81(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 81.0 - 0.05) (clock < 81.0 + 0.05)) (and (x1 > -11.988 - 0.1) (x1 < -11.988 + 0.1))) (and (and (x4 > -3.393 - 0.1) (x4 < -3.393 + 0.1)) (and (x7 > -2.036 - 0.1) (x7 < -2.036 + 0.1)))) ==> @183(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs81
{
	 mode 183;
	 invt:
		 (clock < 82.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @82(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 82.0 - 0.05) (clock < 82.0 + 0.05)) (and (x1 > -11.803 - 0.1) (x1 < -11.803 + 0.1))) (and (and (x4 > -3.518 - 0.1) (x4 < -3.518 + 0.1)) (and (x7 > -1.877 - 0.1) (x7 < -1.877 + 0.1)))) ==> @184(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs82
{
	 mode 184;
	 invt:
		 (clock < 83.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @83(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 83.0 - 0.05) (clock < 83.0 + 0.05)) (and (x1 > -11.603 - 0.1) (x1 < -11.603 + 0.1))) (and (and (x4 > -3.794 - 0.1) (x4 < -3.794 + 0.1)) (and (x7 > -1.619 - 0.1) (x7 < -1.619 + 0.1)))) ==> @185(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs83
{
	 mode 185;
	 invt:
		 (clock < 84.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @84(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 84.0 - 0.05) (clock < 84.0 + 0.05)) (and (x1 > -11.499 - 0.1) (x1 < -11.499 + 0.1))) (and (and (x4 > -3.922 - 0.1) (x4 < -3.922 + 0.1)) (and (x7 > -1.478 - 0.1) (x7 < -1.478 + 0.1)))) ==> @186(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs84
{
	 mode 186;
	 invt:
		 (clock < 85.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @85(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 85.0 - 0.05) (clock < 85.0 + 0.05)) (and (x1 > -11.467 - 0.1) (x1 < -11.467 + 0.1))) (and (and (x4 > -3.913 - 0.1) (x4 < -3.913 + 0.1)) (and (x7 > -1.459 - 0.1) (x7 < -1.459 + 0.1)))) ==> @187(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs85
{
	 mode 187;
	 invt:
		 (clock < 86.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @86(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 86.0 - 0.05) (clock < 86.0 + 0.05)) (and (x1 > -11.456 - 0.1) (x1 < -11.456 + 0.1))) (and (and (x4 > -3.862 - 0.1) (x4 < -3.862 + 0.1)) (and (x7 > -1.491 - 0.1) (x7 < -1.491 + 0.1)))) ==> @188(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs86
{
	 mode 188;
	 invt:
		 (clock < 87.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @87(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 87.0 - 0.05) (clock < 87.0 + 0.05)) (and (x1 > -11.445 - 0.1) (x1 < -11.445 + 0.1))) (and (and (x4 > -3.826 - 0.1) (x4 < -3.826 + 0.1)) (and (x7 > -1.52 - 0.1) (x7 < -1.52 + 0.1)))) ==> @189(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs87
{
	 mode 189;
	 invt:
		 (clock < 88.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @88(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 88.0 - 0.05) (clock < 88.0 + 0.05)) (and (x1 > -11.43 - 0.1) (x1 < -11.43 + 0.1))) (and (and (x4 > -3.815 - 0.1) (x4 < -3.815 + 0.1)) (and (x7 > -1.529 - 0.1) (x7 < -1.529 + 0.1)))) ==> @190(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs88
{
	 mode 190;
	 invt:
		 (clock < 89.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @89(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 89.0 - 0.05) (clock < 89.0 + 0.05)) (and (x1 > -11.417 - 0.1) (x1 < -11.417 + 0.1))) (and (and (x4 > -3.817 - 0.1) (x4 < -3.817 + 0.1)) (and (x7 > -1.526 - 0.1) (x7 < -1.526 + 0.1)))) ==> @191(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs89
{
	 mode 191;
	 invt:
		 (clock < 90.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @90(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 90.0 - 0.05) (clock < 90.0 + 0.05)) (and (x1 > -11.408 - 0.1) (x1 < -11.408 + 0.1))) (and (and (x4 > -3.819 - 0.1) (x4 < -3.819 + 0.1)) (and (x7 > -1.519 - 0.1) (x7 < -1.519 + 0.1)))) ==> @192(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs90
{
	 mode 192;
	 invt:
		 (clock < 91.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @91(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 91.0 - 0.05) (clock < 91.0 + 0.05)) (and (x1 > -11.182 - 0.1) (x1 < -11.182 + 0.1))) (and (and (x4 > -4.52 - 0.1) (x4 < -4.52 + 0.1)) (and (x7 > -1.033 - 0.1) (x7 < -1.033 + 0.1)))) ==> @193(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs91
{
	 mode 193;
	 invt:
		 (clock < 92.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @92(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 92.0 - 0.05) (clock < 92.0 + 0.05)) (and (x1 > -10.509 - 0.1) (x1 < -10.509 + 0.1))) (and (and (x4 > -6.574 - 0.1) (x4 < -6.574 + 0.1)) (and (x7 > 0.34 - 0.1) (x7 < 0.34 + 0.1)))) ==> @194(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs92
{
	 mode 194;
	 invt:
		 (clock < 93.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @93(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 93.0 - 0.05) (clock < 93.0 + 0.05)) (and (x1 > -9.916 - 0.1) (x1 < -9.916 + 0.1))) (and (and (x4 > -8.207 - 0.1) (x4 < -8.207 + 0.1)) (and (x7 > 1.257 - 0.1) (x7 < 1.257 + 0.1)))) ==> @195(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs93
{
	 mode 195;
	 invt:
		 (clock < 94.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @94(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 94.0 - 0.05) (clock < 94.0 + 0.05)) (and (x1 > -9.531 - 0.1) (x1 < -9.531 + 0.1))) (and (and (x4 > -9.148 - 0.1) (x4 < -9.148 + 0.1)) (and (x7 > 1.576 - 0.1) (x7 < 1.576 + 0.1)))) ==> @196(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs94
{
	 mode 196;
	 invt:
		 (clock < 95.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @95(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 95.0 - 0.05) (clock < 95.0 + 0.05)) (and (x1 > -9.296 - 0.1) (x1 < -9.296 + 0.1))) (and (and (x4 > -9.704 - 0.1) (x4 < -9.704 + 0.1)) (and (x7 > 1.639 - 0.1) (x7 < 1.639 + 0.1)))) ==> @197(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs95
{
	 mode 197;
	 invt:
		 (clock < 96.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @96(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 96.0 - 0.05) (clock < 96.0 + 0.05)) (and (x1 > -9.151 - 0.1) (x1 < -9.151 + 0.1))) (and (and (x4 > -10.072 - 0.1) (x4 < -10.072 + 0.1)) (and (x7 > 1.655 - 0.1) (x7 < 1.655 + 0.1)))) ==> @198(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs96
{
	 mode 198;
	 invt:
		 (clock < 97.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @97(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 97.0 - 0.05) (clock < 97.0 + 0.05)) (and (x1 > -9.06 - 0.1) (x1 < -9.06 + 0.1))) (and (and (x4 > -10.328 - 0.1) (x4 < -10.328 + 0.1)) (and (x7 > 1.678 - 0.1) (x7 < 1.678 + 0.1)))) ==> @199(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs97
{
	 mode 199;
	 invt:
		 (clock < 98.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @98(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 98.0 - 0.05) (clock < 98.0 + 0.05)) (and (x1 > -9.004 - 0.1) (x1 < -9.004 + 0.1))) (and (and (x4 > -10.504 - 0.1) (x4 < -10.504 + 0.1)) (and (x7 > 1.709 - 0.1) (x7 < 1.709 + 0.1)))) ==> @200(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs98
{
	 mode 200;
	 invt:
		 (clock < 99.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @99(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 99.0 - 0.05) (clock < 99.0 + 0.05)) (and (x1 > -8.969 - 0.1) (x1 < -8.969 + 0.1))) (and (and (x4 > -10.624 - 0.1) (x4 < -10.624 + 0.1)) (and (x7 > 1.738 - 0.1) (x7 < 1.738 + 0.1)))) ==> @201(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs99
{
	 mode 201;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @100(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 100.0 - 0.05) (clock < 100.0 + 0.05)) (and (x1 > -8.947 - 0.1) (x1 < -8.947 + 0.1))) (and (and (x4 > -10.705 - 0.1) (x4 < -10.705 + 0.1)) (and (x7 > 1.76 - 0.1) (x7 < 1.76 + 0.1)))) ==> @202(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs100
{
	 mode 202;
	 invt:
		 (clock < 100.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @101(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
init:
@1 (and (and (and (x1 = 0.0) (x2 = 0.0)) (and (x3 = 0.0) (and (x4 = 0.0) (x5 = 0.0)))) (and (and (x6 = 0.0) (x7 = 0.0)) (and (x8 = 0.0) (and (x9 = 0.0) (clock = 0.0)))));

goal:
@101 true;
@202 true;
