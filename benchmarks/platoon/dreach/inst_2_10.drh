[0,10.05] time;
[-14.089,5.0] x1;
[-7.667,5.063] x2;
[-9.783000000000001,5.0] x3;
[-15.025,5.0] x4;
[-7.5169999999999995,5.0] x5;
[-9.899000000000001,5.0] x6;
[-6.084,7.436999999999999] x7;
[-5.331,6.657] x8;
[-9.677,5.0] x9;
[0,10.05] clock;

// elf_obs0
{
	 mode 1;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @12(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs1
{
	 mode 2;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs2
{
	 mode 3;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs3
{
	 mode 4;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs4
{
	 mode 5;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs5
{
	 mode 6;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.02 - 0.1) (x1 < -9.02 + 0.1))) (and (and (x4 > -3.888 - 0.1) (x4 < -3.888 + 0.1)) (and (x7 > -0.557 - 0.1) (x7 < -0.557 + 0.1)))) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs6
{
	 mode 7;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.081 - 0.1) (x1 < -9.081 + 0.1))) (and (and (x4 > -6.314 - 0.1) (x4 < -6.314 + 0.1)) (and (x7 > 1.017 - 0.1) (x7 < 1.017 + 0.1)))) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs7
{
	 mode 8;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -9.022 - 0.1) (x1 < -9.022 + 0.1))) (and (and (x4 > -8.254 - 0.1) (x4 < -8.254 + 0.1)) (and (x7 > 2.107 - 0.1) (x7 < 2.107 + 0.1)))) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs8
{
	 mode 9;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -8.976 - 0.1) (x1 < -8.976 + 0.1))) (and (and (x4 > -9.394 - 0.1) (x4 < -9.394 + 0.1)) (and (x7 > 2.433 - 0.1) (x7 < 2.433 + 0.1)))) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs9
{
	 mode 10;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -8.951 - 0.1) (x1 < -8.951 + 0.1))) (and (and (x4 > -10.02 - 0.1) (x4 < -10.02 + 0.1)) (and (x7 > 2.347 - 0.1) (x7 < 2.347 + 0.1)))) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// elf_obs10
{
	 mode 11;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3 - 0.8198 * x4 + 0.427 * x5 - 0.045 * x6 - 0.1942 * x7 + 0.3626 * x8 - 0.0946 * x9;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 0.8718 * x1 + 3.814 * x2 - 0.0754 * x3 + 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6 - 0.595 * x7 + 0.1294 * x8 - 0.0796 * x9;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs0
{
	 mode 12;
	 invt:
		 (clock < 1.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @1(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x1 > -1.568 - 0.1) (x1 < -1.568 + 0.1))) (and (and (x4 > -0.077 - 0.1) (x4 < -0.077 + 0.1)) (and (x7 > -0.02 - 0.1) (x7 < -0.02 + 0.1)))) ==> @13(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs1
{
	 mode 13;
	 invt:
		 (clock < 2.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @2(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x1 > -4.139 - 0.1) (x1 < -4.139 + 0.1))) (and (and (x4 > -0.586 - 0.1) (x4 < -0.586 + 0.1)) (and (x7 > -0.168 - 0.1) (x7 < -0.168 + 0.1)))) ==> @14(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs2
{
	 mode 14;
	 invt:
		 (clock < 3.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @3(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x1 > -6.095 - 0.1) (x1 < -6.095 + 0.1))) (and (and (x4 > -1.403 - 0.1) (x4 < -1.403 + 0.1)) (and (x7 > -0.456 - 0.1) (x7 < -0.456 + 0.1)))) ==> @15(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs3
{
	 mode 15;
	 invt:
		 (clock < 4.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @4(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x1 > -7.444 - 0.1) (x1 < -7.444 + 0.1))) (and (and (x4 > -2.162 - 0.1) (x4 < -2.162 + 0.1)) (and (x7 > -0.781 - 0.1) (x7 < -0.781 + 0.1)))) ==> @16(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs4
{
	 mode 16;
	 invt:
		 (clock < 5.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @5(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x1 > -8.441 - 0.1) (x1 < -8.441 + 0.1))) (and (and (x4 > -2.699 - 0.1) (x4 < -2.699 + 0.1)) (and (x7 > -1.048 - 0.1) (x7 < -1.048 + 0.1)))) ==> @17(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs5
{
	 mode 17;
	 invt:
		 (clock < 6.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @6(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x1 > -9.02 - 0.1) (x1 < -9.02 + 0.1))) (and (and (x4 > -3.888 - 0.1) (x4 < -3.888 + 0.1)) (and (x7 > -0.557 - 0.1) (x7 < -0.557 + 0.1)))) ==> @18(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs6
{
	 mode 18;
	 invt:
		 (clock < 7.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @7(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x1 > -9.081 - 0.1) (x1 < -9.081 + 0.1))) (and (and (x4 > -6.314 - 0.1) (x4 < -6.314 + 0.1)) (and (x7 > 1.017 - 0.1) (x7 < 1.017 + 0.1)))) ==> @19(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs7
{
	 mode 19;
	 invt:
		 (clock < 8.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @8(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x1 > -9.022 - 0.1) (x1 < -9.022 + 0.1))) (and (and (x4 > -8.254 - 0.1) (x4 < -8.254 + 0.1)) (and (x7 > 2.107 - 0.1) (x7 < 2.107 + 0.1)))) ==> @20(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs8
{
	 mode 20;
	 invt:
		 (clock < 9.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @9(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x1 > -8.976 - 0.1) (x1 < -8.976 + 0.1))) (and (and (x4 > -9.394 - 0.1) (x4 < -9.394 + 0.1)) (and (x7 > 2.433 - 0.1) (x7 < 2.433 + 0.1)))) ==> @21(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs9
{
	 mode 21;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @10(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));

		 (and (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x1 > -8.951 - 0.1) (x1 < -8.951 + 0.1))) (and (and (x4 > -10.02 - 0.1) (x4 < -10.02 + 0.1)) (and (x7 > 2.347 - 0.1) (x7 < 2.347 + 0.1)))) ==> @22(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
// dreizehn_obs10
{
	 mode 22;
	 invt:
		 (clock < 10.0 + 0.05);
	 flow:
		 d/dt[x1] = x2;
		 d/dt[x2] = -x3 + -4.0;
		 d/dt[x3] = 1.605 * x1 + 4.868 * x2 - 3.5754 * x3;
		 d/dt[x4] = x5;
		 d/dt[x5] = x3 - x6;
		 d/dt[x6] = 1.1936 * x4 + 3.6258 * x5 - 3.2396 * x6;
		 d/dt[x7] = x8;
		 d/dt[x8] = x6 - x9;
		 d/dt[x9] = 0.7132 * x1 + 3.573 * x2 - 0.0964 * x3 + 0.8472 * x4 + 3.2568 * x5 - 0.0876 * x6 + 1.2726 * x7 + 3.072 * x8 - 3.1356 * x9;
		 d/dt[clock] = 1.0;
	 jump:
		 (true) ==> @11(and (x1' = x1) (x2' = x2) (x3' = x3) (x4' = x4) (x5' = x5) (x6' = x6) (x7' = x7) (x8' = x8) (x9' = x9) (clock' = clock));
}
init:
@1 (and (and (and (x1 = 0.0) (x2 = 0.0)) (and (x3 = 0.0) (and (x4 = 0.0) (x5 = 0.0)))) (and (and (x6 = 0.0) (x7 = 0.0)) (and (x8 = 0.0) (and (x9 = 0.0) (clock = 0.0)))));

goal:
@11 true;
@22 true;
