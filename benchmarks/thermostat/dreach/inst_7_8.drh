[0,8.05] time;
[17,23] x;
[0,8.05] clock;

// on_obs0
{
	 mode 1;
	 invt:
		 (and (x <= 22.0) (clock < 0.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @11(and (x' = x) (clock' = clock));

		 (and (and (clock > 0.0 - 0.05) (clock < 0.0 + 0.05)) (and (x > 21.7 - 0.1) (x < 21.7 + 0.1))) ==> @2(and (x' = x) (clock' = clock));
}
// on_obs1
{
	 mode 2;
	 invt:
		 (and (x <= 22.0) (clock < 1.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @12(and (x' = x) (clock' = clock));

		 (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x > 21.51 - 0.1) (x < 21.51 + 0.1))) ==> @3(and (x' = x) (clock' = clock));
}
// on_obs2
{
	 mode 3;
	 invt:
		 (and (x <= 22.0) (clock < 2.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @13(and (x' = x) (clock' = clock));

		 (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x > 21.31 - 0.1) (x < 21.31 + 0.1))) ==> @4(and (x' = x) (clock' = clock));
}
// on_obs3
{
	 mode 4;
	 invt:
		 (and (x <= 22.0) (clock < 3.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @14(and (x' = x) (clock' = clock));

		 (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x > 21.11 - 0.1) (x < 21.11 + 0.1))) ==> @5(and (x' = x) (clock' = clock));
}
// on_obs4
{
	 mode 5;
	 invt:
		 (and (x <= 22.0) (clock < 4.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @15(and (x' = x) (clock' = clock));

		 (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x > 20.91 - 0.1) (x < 20.91 + 0.1))) ==> @6(and (x' = x) (clock' = clock));
}
// on_obs5
{
	 mode 6;
	 invt:
		 (and (x <= 22.0) (clock < 5.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @16(and (x' = x) (clock' = clock));

		 (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x > 20.71 - 0.1) (x < 20.71 + 0.1))) ==> @7(and (x' = x) (clock' = clock));
}
// on_obs6
{
	 mode 7;
	 invt:
		 (and (x <= 22.0) (clock < 6.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @17(and (x' = x) (clock' = clock));

		 (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x > 20.51 - 0.1) (x < 20.51 + 0.1))) ==> @8(and (x' = x) (clock' = clock));
}
// on_obs7
{
	 mode 8;
	 invt:
		 (and (x <= 22.0) (clock < 7.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @18(and (x' = x) (clock' = clock));

		 (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x > 20.31 - 0.1) (x < 20.31 + 0.1))) ==> @9(and (x' = x) (clock' = clock));
}
// on_obs8
{
	 mode 9;
	 invt:
		 (and (x <= 22.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @19(and (x' = x) (clock' = clock));

		 (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x > 20.11 - 0.1) (x < 20.11 + 0.1))) ==> @10(and (x' = x) (clock' = clock));
}
// on_obs9
{
	 mode 10;
	 invt:
		 (and (x <= 22.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @20(and (x' = x) (clock' = clock));
}
// off_obs0
{
	 mode 11;
	 invt:
		 (and (x >= 18.0) (clock < 0.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @1(and (x' = x) (clock' = clock));

		 (and (and (clock > 0.0 - 0.05) (clock < 0.0 + 0.05)) (and (x > 21.7 - 0.1) (x < 21.7 + 0.1))) ==> @12(and (x' = x) (clock' = clock));
}
// off_obs1
{
	 mode 12;
	 invt:
		 (and (x >= 18.0) (clock < 1.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @2(and (x' = x) (clock' = clock));

		 (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x > 21.51 - 0.1) (x < 21.51 + 0.1))) ==> @13(and (x' = x) (clock' = clock));
}
// off_obs2
{
	 mode 13;
	 invt:
		 (and (x >= 18.0) (clock < 2.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @3(and (x' = x) (clock' = clock));

		 (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x > 21.31 - 0.1) (x < 21.31 + 0.1))) ==> @14(and (x' = x) (clock' = clock));
}
// off_obs3
{
	 mode 14;
	 invt:
		 (and (x >= 18.0) (clock < 3.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @4(and (x' = x) (clock' = clock));

		 (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x > 21.11 - 0.1) (x < 21.11 + 0.1))) ==> @15(and (x' = x) (clock' = clock));
}
// off_obs4
{
	 mode 15;
	 invt:
		 (and (x >= 18.0) (clock < 4.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @5(and (x' = x) (clock' = clock));

		 (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x > 20.91 - 0.1) (x < 20.91 + 0.1))) ==> @16(and (x' = x) (clock' = clock));
}
// off_obs5
{
	 mode 16;
	 invt:
		 (and (x >= 18.0) (clock < 5.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @6(and (x' = x) (clock' = clock));

		 (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x > 20.71 - 0.1) (x < 20.71 + 0.1))) ==> @17(and (x' = x) (clock' = clock));
}
// off_obs6
{
	 mode 17;
	 invt:
		 (and (x >= 18.0) (clock < 6.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @7(and (x' = x) (clock' = clock));

		 (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x > 20.51 - 0.1) (x < 20.51 + 0.1))) ==> @18(and (x' = x) (clock' = clock));
}
// off_obs7
{
	 mode 18;
	 invt:
		 (and (x >= 18.0) (clock < 7.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @8(and (x' = x) (clock' = clock));

		 (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x > 20.31 - 0.1) (x < 20.31 + 0.1))) ==> @19(and (x' = x) (clock' = clock));
}
// off_obs8
{
	 mode 19;
	 invt:
		 (and (x >= 18.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @9(and (x' = x) (clock' = clock));

		 (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x > 20.11 - 0.1) (x < 20.11 + 0.1))) ==> @20(and (x' = x) (clock' = clock));
}
// off_obs9
{
	 mode 20;
	 invt:
		 (and (x >= 18.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @10(and (x' = x) (clock' = clock));
}
init:
@1 (and (x = 21.7) (clock = 0.0));

goal:
@10 true;
@20 true;
