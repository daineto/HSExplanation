[0,20.05] time;
[17,23] x;
[0,20.05] clock;

// on_obs0
{
	 mode 1;
	 invt:
		 (and (x <= 22.0) (clock < 0.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @23(and (x' = x) (clock' = clock));

		 (and (and (clock > 0.0 - 0.05) (clock < 0.0 + 0.05)) (and (x > 21.8 - 0.1) (x < 21.8 + 0.1))) ==> @2(and (x' = x) (clock' = clock));
}
// on_obs1
{
	 mode 2;
	 invt:
		 (and (x <= 22.0) (clock < 1.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @24(and (x' = x) (clock' = clock));

		 (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x > 21.6 - 0.1) (x < 21.6 + 0.1))) ==> @3(and (x' = x) (clock' = clock));
}
// on_obs2
{
	 mode 3;
	 invt:
		 (and (x <= 22.0) (clock < 2.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @25(and (x' = x) (clock' = clock));

		 (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x > 21.4 - 0.1) (x < 21.4 + 0.1))) ==> @4(and (x' = x) (clock' = clock));
}
// on_obs3
{
	 mode 4;
	 invt:
		 (and (x <= 22.0) (clock < 3.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @26(and (x' = x) (clock' = clock));

		 (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x > 21.2 - 0.1) (x < 21.2 + 0.1))) ==> @5(and (x' = x) (clock' = clock));
}
// on_obs4
{
	 mode 5;
	 invt:
		 (and (x <= 22.0) (clock < 4.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @27(and (x' = x) (clock' = clock));

		 (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x > 21.0 - 0.1) (x < 21.0 + 0.1))) ==> @6(and (x' = x) (clock' = clock));
}
// on_obs5
{
	 mode 6;
	 invt:
		 (and (x <= 22.0) (clock < 5.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @28(and (x' = x) (clock' = clock));

		 (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x > 20.8 - 0.1) (x < 20.8 + 0.1))) ==> @7(and (x' = x) (clock' = clock));
}
// on_obs6
{
	 mode 7;
	 invt:
		 (and (x <= 22.0) (clock < 6.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @29(and (x' = x) (clock' = clock));

		 (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x > 20.6 - 0.1) (x < 20.6 + 0.1))) ==> @8(and (x' = x) (clock' = clock));
}
// on_obs7
{
	 mode 8;
	 invt:
		 (and (x <= 22.0) (clock < 7.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @30(and (x' = x) (clock' = clock));

		 (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x > 20.4 - 0.1) (x < 20.4 + 0.1))) ==> @9(and (x' = x) (clock' = clock));
}
// on_obs8
{
	 mode 9;
	 invt:
		 (and (x <= 22.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @31(and (x' = x) (clock' = clock));

		 (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x > 20.2 - 0.1) (x < 20.2 + 0.1))) ==> @10(and (x' = x) (clock' = clock));
}
// on_obs9
{
	 mode 10;
	 invt:
		 (and (x <= 22.0) (clock < 9.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @32(and (x' = x) (clock' = clock));

		 (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x > 20.0 - 0.1) (x < 20.0 + 0.1))) ==> @11(and (x' = x) (clock' = clock));
}
// on_obs10
{
	 mode 11;
	 invt:
		 (and (x <= 22.0) (clock < 10.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @33(and (x' = x) (clock' = clock));

		 (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x > 19.8 - 0.1) (x < 19.8 + 0.1))) ==> @12(and (x' = x) (clock' = clock));
}
// on_obs11
{
	 mode 12;
	 invt:
		 (and (x <= 22.0) (clock < 11.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @34(and (x' = x) (clock' = clock));

		 (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x > 19.6 - 0.1) (x < 19.6 + 0.1))) ==> @13(and (x' = x) (clock' = clock));
}
// on_obs12
{
	 mode 13;
	 invt:
		 (and (x <= 22.0) (clock < 12.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @35(and (x' = x) (clock' = clock));

		 (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x > 19.4 - 0.1) (x < 19.4 + 0.1))) ==> @14(and (x' = x) (clock' = clock));
}
// on_obs13
{
	 mode 14;
	 invt:
		 (and (x <= 22.0) (clock < 13.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @36(and (x' = x) (clock' = clock));

		 (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x > 19.2 - 0.1) (x < 19.2 + 0.1))) ==> @15(and (x' = x) (clock' = clock));
}
// on_obs14
{
	 mode 15;
	 invt:
		 (and (x <= 22.0) (clock < 14.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @37(and (x' = x) (clock' = clock));

		 (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x > 19.0 - 0.1) (x < 19.0 + 0.1))) ==> @16(and (x' = x) (clock' = clock));
}
// on_obs15
{
	 mode 16;
	 invt:
		 (and (x <= 22.0) (clock < 15.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @38(and (x' = x) (clock' = clock));

		 (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x > 19.3 - 0.1) (x < 19.3 + 0.1))) ==> @17(and (x' = x) (clock' = clock));
}
// on_obs16
{
	 mode 17;
	 invt:
		 (and (x <= 22.0) (clock < 16.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @39(and (x' = x) (clock' = clock));

		 (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x > 20.1 - 0.1) (x < 20.1 + 0.1))) ==> @18(and (x' = x) (clock' = clock));
}
// on_obs17
{
	 mode 18;
	 invt:
		 (and (x <= 22.0) (clock < 17.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @40(and (x' = x) (clock' = clock));

		 (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x > 20.9 - 0.1) (x < 20.9 + 0.1))) ==> @19(and (x' = x) (clock' = clock));
}
// on_obs18
{
	 mode 19;
	 invt:
		 (and (x <= 22.0) (clock < 18.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @41(and (x' = x) (clock' = clock));

		 (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x > 21.21 - 0.1) (x < 21.21 + 0.1))) ==> @20(and (x' = x) (clock' = clock));
}
// on_obs19
{
	 mode 20;
	 invt:
		 (and (x <= 22.0) (clock < 19.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @42(and (x' = x) (clock' = clock));

		 (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x > 21.01 - 0.1) (x < 21.01 + 0.1))) ==> @21(and (x' = x) (clock' = clock));
}
// on_obs20
{
	 mode 21;
	 invt:
		 (and (x <= 22.0) (clock < 20.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @43(and (x' = x) (clock' = clock));

		 (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x > 20.81 - 0.1) (x < 20.81 + 0.1))) ==> @22(and (x' = x) (clock' = clock));
}
// on_obs21
{
	 mode 22;
	 invt:
		 (and (x <= 22.0) (clock < 20.0 + 0.05));
	 flow:
		 d/dt[x] = 0.8;
		 d/dt[clock] = 1.0;
	 jump:
		 (x > 21.0) ==> @44(and (x' = x) (clock' = clock));
}
// off_obs0
{
	 mode 23;
	 invt:
		 (and (x >= 18.0) (clock < 0.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @1(and (x' = x) (clock' = clock));

		 (and (and (clock > 0.0 - 0.05) (clock < 0.0 + 0.05)) (and (x > 21.8 - 0.1) (x < 21.8 + 0.1))) ==> @24(and (x' = x) (clock' = clock));
}
// off_obs1
{
	 mode 24;
	 invt:
		 (and (x >= 18.0) (clock < 1.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @2(and (x' = x) (clock' = clock));

		 (and (and (clock > 1.0 - 0.05) (clock < 1.0 + 0.05)) (and (x > 21.6 - 0.1) (x < 21.6 + 0.1))) ==> @25(and (x' = x) (clock' = clock));
}
// off_obs2
{
	 mode 25;
	 invt:
		 (and (x >= 18.0) (clock < 2.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @3(and (x' = x) (clock' = clock));

		 (and (and (clock > 2.0 - 0.05) (clock < 2.0 + 0.05)) (and (x > 21.4 - 0.1) (x < 21.4 + 0.1))) ==> @26(and (x' = x) (clock' = clock));
}
// off_obs3
{
	 mode 26;
	 invt:
		 (and (x >= 18.0) (clock < 3.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @4(and (x' = x) (clock' = clock));

		 (and (and (clock > 3.0 - 0.05) (clock < 3.0 + 0.05)) (and (x > 21.2 - 0.1) (x < 21.2 + 0.1))) ==> @27(and (x' = x) (clock' = clock));
}
// off_obs4
{
	 mode 27;
	 invt:
		 (and (x >= 18.0) (clock < 4.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @5(and (x' = x) (clock' = clock));

		 (and (and (clock > 4.0 - 0.05) (clock < 4.0 + 0.05)) (and (x > 21.0 - 0.1) (x < 21.0 + 0.1))) ==> @28(and (x' = x) (clock' = clock));
}
// off_obs5
{
	 mode 28;
	 invt:
		 (and (x >= 18.0) (clock < 5.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @6(and (x' = x) (clock' = clock));

		 (and (and (clock > 5.0 - 0.05) (clock < 5.0 + 0.05)) (and (x > 20.8 - 0.1) (x < 20.8 + 0.1))) ==> @29(and (x' = x) (clock' = clock));
}
// off_obs6
{
	 mode 29;
	 invt:
		 (and (x >= 18.0) (clock < 6.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @7(and (x' = x) (clock' = clock));

		 (and (and (clock > 6.0 - 0.05) (clock < 6.0 + 0.05)) (and (x > 20.6 - 0.1) (x < 20.6 + 0.1))) ==> @30(and (x' = x) (clock' = clock));
}
// off_obs7
{
	 mode 30;
	 invt:
		 (and (x >= 18.0) (clock < 7.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @8(and (x' = x) (clock' = clock));

		 (and (and (clock > 7.0 - 0.05) (clock < 7.0 + 0.05)) (and (x > 20.4 - 0.1) (x < 20.4 + 0.1))) ==> @31(and (x' = x) (clock' = clock));
}
// off_obs8
{
	 mode 31;
	 invt:
		 (and (x >= 18.0) (clock < 8.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @9(and (x' = x) (clock' = clock));

		 (and (and (clock > 8.0 - 0.05) (clock < 8.0 + 0.05)) (and (x > 20.2 - 0.1) (x < 20.2 + 0.1))) ==> @32(and (x' = x) (clock' = clock));
}
// off_obs9
{
	 mode 32;
	 invt:
		 (and (x >= 18.0) (clock < 9.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @10(and (x' = x) (clock' = clock));

		 (and (and (clock > 9.0 - 0.05) (clock < 9.0 + 0.05)) (and (x > 20.0 - 0.1) (x < 20.0 + 0.1))) ==> @33(and (x' = x) (clock' = clock));
}
// off_obs10
{
	 mode 33;
	 invt:
		 (and (x >= 18.0) (clock < 10.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @11(and (x' = x) (clock' = clock));

		 (and (and (clock > 10.0 - 0.05) (clock < 10.0 + 0.05)) (and (x > 19.8 - 0.1) (x < 19.8 + 0.1))) ==> @34(and (x' = x) (clock' = clock));
}
// off_obs11
{
	 mode 34;
	 invt:
		 (and (x >= 18.0) (clock < 11.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @12(and (x' = x) (clock' = clock));

		 (and (and (clock > 11.0 - 0.05) (clock < 11.0 + 0.05)) (and (x > 19.6 - 0.1) (x < 19.6 + 0.1))) ==> @35(and (x' = x) (clock' = clock));
}
// off_obs12
{
	 mode 35;
	 invt:
		 (and (x >= 18.0) (clock < 12.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @13(and (x' = x) (clock' = clock));

		 (and (and (clock > 12.0 - 0.05) (clock < 12.0 + 0.05)) (and (x > 19.4 - 0.1) (x < 19.4 + 0.1))) ==> @36(and (x' = x) (clock' = clock));
}
// off_obs13
{
	 mode 36;
	 invt:
		 (and (x >= 18.0) (clock < 13.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @14(and (x' = x) (clock' = clock));

		 (and (and (clock > 13.0 - 0.05) (clock < 13.0 + 0.05)) (and (x > 19.2 - 0.1) (x < 19.2 + 0.1))) ==> @37(and (x' = x) (clock' = clock));
}
// off_obs14
{
	 mode 37;
	 invt:
		 (and (x >= 18.0) (clock < 14.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @15(and (x' = x) (clock' = clock));

		 (and (and (clock > 14.0 - 0.05) (clock < 14.0 + 0.05)) (and (x > 19.0 - 0.1) (x < 19.0 + 0.1))) ==> @38(and (x' = x) (clock' = clock));
}
// off_obs15
{
	 mode 38;
	 invt:
		 (and (x >= 18.0) (clock < 15.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @16(and (x' = x) (clock' = clock));

		 (and (and (clock > 15.0 - 0.05) (clock < 15.0 + 0.05)) (and (x > 19.3 - 0.1) (x < 19.3 + 0.1))) ==> @39(and (x' = x) (clock' = clock));
}
// off_obs16
{
	 mode 39;
	 invt:
		 (and (x >= 18.0) (clock < 16.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @17(and (x' = x) (clock' = clock));

		 (and (and (clock > 16.0 - 0.05) (clock < 16.0 + 0.05)) (and (x > 20.1 - 0.1) (x < 20.1 + 0.1))) ==> @40(and (x' = x) (clock' = clock));
}
// off_obs17
{
	 mode 40;
	 invt:
		 (and (x >= 18.0) (clock < 17.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @18(and (x' = x) (clock' = clock));

		 (and (and (clock > 17.0 - 0.05) (clock < 17.0 + 0.05)) (and (x > 20.9 - 0.1) (x < 20.9 + 0.1))) ==> @41(and (x' = x) (clock' = clock));
}
// off_obs18
{
	 mode 41;
	 invt:
		 (and (x >= 18.0) (clock < 18.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @19(and (x' = x) (clock' = clock));

		 (and (and (clock > 18.0 - 0.05) (clock < 18.0 + 0.05)) (and (x > 21.21 - 0.1) (x < 21.21 + 0.1))) ==> @42(and (x' = x) (clock' = clock));
}
// off_obs19
{
	 mode 42;
	 invt:
		 (and (x >= 18.0) (clock < 19.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @20(and (x' = x) (clock' = clock));

		 (and (and (clock > 19.0 - 0.05) (clock < 19.0 + 0.05)) (and (x > 21.01 - 0.1) (x < 21.01 + 0.1))) ==> @43(and (x' = x) (clock' = clock));
}
// off_obs20
{
	 mode 43;
	 invt:
		 (and (x >= 18.0) (clock < 20.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @21(and (x' = x) (clock' = clock));

		 (and (and (clock > 20.0 - 0.05) (clock < 20.0 + 0.05)) (and (x > 20.81 - 0.1) (x < 20.81 + 0.1))) ==> @44(and (x' = x) (clock' = clock));
}
// off_obs21
{
	 mode 44;
	 invt:
		 (and (x >= 18.0) (clock < 20.0 + 0.05));
	 flow:
		 d/dt[x] = -0.2;
		 d/dt[clock] = 1.0;
	 jump:
		 (x < 19.0) ==> @22(and (x' = x) (clock' = clock));
}
init:
@1 (and (x = 21.8) (clock = 0.0));

goal:
@22 true;
@44 true;
